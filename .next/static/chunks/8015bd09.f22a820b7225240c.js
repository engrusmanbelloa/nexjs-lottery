"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[766],{59917:function(t,e,r){r.d(e,{RG:function(){return De},ew:function(){return $e},nh:function(){return E}});var i=r(48764),s=r(91713),n=r(15866),o=r(13550),a=r.n(o),c=r(77191),u=r.n(c),l=r(17748),d=r(25532),h=r(39386),g=r(40475),p=r(53471),b=r(83937),m=r(31198),f=r.n(m),y=r(91094),k=r.n(y),w=r(9905),S=r(27760);n.P6.sha512Sync=(...t)=>(0,s.o)(n.P6.concatBytes(...t));n.P6.randomPrivateKey;const _=()=>{const t=n.P6.randomPrivateKey(),e=I(t),r=new Uint8Array(64);return r.set(t),r.set(e,32),{publicKey:e,secretKey:r}},I=n.Z_.getPublicKey;function A(t){try{return n.E9.fromHex(t,!0),!0}catch{return!1}}const x=(t,e)=>n.Z_.sign(t,e.slice(0,32)),B=n.Z_.verify,v=t=>i.Buffer.isBuffer(t)?t:t instanceof Uint8Array?i.Buffer.from(t.buffer,t.byteOffset,t.byteLength):i.Buffer.from(t);class R{constructor(t){Object.assign(this,t)}encode(){return i.Buffer.from((0,d.serialize)(P,this))}static decode(t){return(0,d.deserialize)(P,this,t)}static decodeUnchecked(t){return(0,d.deserializeUnchecked)(P,this,t)}}const P=new Map,W=32;class E extends R{constructor(t){if(super({}),this._bn=void 0,function(t){return void 0!==t._bn}(t))this._bn=t._bn;else{if("string"===typeof t){const e=u().decode(t);if(e.length!=W)throw new Error("Invalid public key input");this._bn=new(a())(e)}else this._bn=new(a())(t);if(this._bn.byteLength()>32)throw new Error("Invalid public key input")}}equals(t){return this._bn.eq(t._bn)}toBase58(){return u().encode(this.toBytes())}toJSON(){return this.toBase58()}toBytes(){return this.toBuffer()}toBuffer(){const t=this._bn.toArrayLike(i.Buffer);if(t.length===W)return t;const e=i.Buffer.alloc(32);return t.copy(e,32-t.length),e}toString(){return this.toBase58()}static async createWithSeed(t,e,r){const s=i.Buffer.concat([t.toBuffer(),i.Buffer.from(e),r.toBuffer()]),n=(0,l.J)(s);return new E(n)}static createProgramAddressSync(t,e){let r=i.Buffer.alloc(0);t.forEach((function(t){if(t.length>32)throw new TypeError("Max seed length exceeded");r=i.Buffer.concat([r,v(t)])})),r=i.Buffer.concat([r,e.toBuffer(),i.Buffer.from("ProgramDerivedAddress")]);const s=(0,l.J)(r);if(A(s))throw new Error("Invalid seeds, address must fall off the curve");return new E(s)}static async createProgramAddress(t,e){return this.createProgramAddressSync(t,e)}static findProgramAddressSync(t,e){let r,s=255;for(;0!=s;){try{const n=t.concat(i.Buffer.from([s]));r=this.createProgramAddressSync(n,e)}catch(n){if(n instanceof TypeError)throw n;s--;continue}return[r,s]}throw new Error("Unable to find a viable program address nonce")}static async findProgramAddress(t,e){return this.findProgramAddressSync(t,e)}static isOnCurve(t){return A(new E(t).toBytes())}}E.default=new E("11111111111111111111111111111111"),P.set(E,{kind:"struct",fields:[["_bn","u256"]]});new E("BPFLoader1111111111111111111111111111111111");const C=1232;class T extends Error{constructor(t){super(`Signature ${t} has expired: block height exceeded.`),this.signature=void 0,this.signature=t}}Object.defineProperty(T.prototype,"name",{value:"TransactionExpiredBlockheightExceededError"});class q extends Error{constructor(t,e){super(`Transaction was not confirmed in ${e.toFixed(2)} seconds. It is unknown if it succeeded or failed. Check signature ${t} using the Solana Explorer or CLI tools.`),this.signature=void 0,this.signature=t}}Object.defineProperty(q.prototype,"name",{value:"TransactionExpiredTimeoutError"});const z=(t="publicKey")=>h.Ik(32,t),O=(t="string")=>{const e=h.n_([h.Jq("length"),h.Jq("lengthPadding"),h.Ik(h.cv(h.Jq(),-8),"chars")],t),r=e.decode.bind(e),s=e.encode.bind(e),n=e;return n.decode=(t,e)=>r(t,e).chars.toString(),n.encode=(t,e,r)=>{const n={chars:i.Buffer.from(t,"utf8")};return s(n,e,r)},n.alloc=t=>h.Jq().span+h.Jq().span+i.Buffer.from(t,"utf8").length,n};function U(t){let e=0,r=0;for(;;){let i=t.shift();if(e|=(127&i)<<7*r,r+=1,0===(128&i))break}return e}function K(t,e){let r=e;for(;;){let e=127&r;if(r>>=7,0==r){t.push(e);break}e|=128,t.push(e)}}class N{constructor(t){this.header=void 0,this.accountKeys=void 0,this.recentBlockhash=void 0,this.instructions=void 0,this.indexToProgramIds=new Map,this.header=t.header,this.accountKeys=t.accountKeys.map((t=>new E(t))),this.recentBlockhash=t.recentBlockhash,this.instructions=t.instructions,this.instructions.forEach((t=>this.indexToProgramIds.set(t.programIdIndex,this.accountKeys[t.programIdIndex])))}get version(){return"legacy"}get staticAccountKeys(){return this.accountKeys}get compiledInstructions(){return this.instructions.map((t=>({programIdIndex:t.programIdIndex,accountKeyIndexes:t.accounts,data:u().decode(t.data)})))}get addressTableLookups(){return[]}isAccountSigner(t){return t<this.header.numRequiredSignatures}isAccountWritable(t){return t<this.header.numRequiredSignatures-this.header.numReadonlySignedAccounts||t>=this.header.numRequiredSignatures&&t<this.accountKeys.length-this.header.numReadonlyUnsignedAccounts}isProgramId(t){return this.indexToProgramIds.has(t)}programIds(){return[...this.indexToProgramIds.values()]}nonProgramIds(){return this.accountKeys.filter(((t,e)=>!this.isProgramId(e)))}serialize(){const t=this.accountKeys.length;let e=[];K(e,t);const r=this.instructions.map((t=>{const{accounts:e,programIdIndex:r}=t,s=Array.from(u().decode(t.data));let n=[];K(n,e.length);let o=[];return K(o,s.length),{programIdIndex:r,keyIndicesCount:i.Buffer.from(n),keyIndices:e,dataLength:i.Buffer.from(o),data:s}}));let s=[];K(s,r.length);let n=i.Buffer.alloc(C);i.Buffer.from(s).copy(n);let o=s.length;r.forEach((t=>{const e=h.n_([h.u8("programIdIndex"),h.Ik(t.keyIndicesCount.length,"keyIndicesCount"),h.A9(h.u8("keyIndex"),t.keyIndices.length,"keyIndices"),h.Ik(t.dataLength.length,"dataLength"),h.A9(h.u8("userdatum"),t.data.length,"data")]).encode(t,n,o);o+=e})),n=n.slice(0,o);const a=h.n_([h.Ik(1,"numRequiredSignatures"),h.Ik(1,"numReadonlySignedAccounts"),h.Ik(1,"numReadonlyUnsignedAccounts"),h.Ik(e.length,"keyCount"),h.A9(z("key"),t,"keys"),z("recentBlockhash")]),c={numRequiredSignatures:i.Buffer.from([this.header.numRequiredSignatures]),numReadonlySignedAccounts:i.Buffer.from([this.header.numReadonlySignedAccounts]),numReadonlyUnsignedAccounts:i.Buffer.from([this.header.numReadonlyUnsignedAccounts]),keyCount:i.Buffer.from(e),keys:this.accountKeys.map((t=>v(t.toBytes()))),recentBlockhash:u().decode(this.recentBlockhash)};let l=i.Buffer.alloc(2048);const d=a.encode(c,l);return n.copy(l,d),l.slice(0,d+n.length)}static from(t){let e=[...t];const r=e.shift();if(r!==(127&r))throw new Error("Versioned messages must be deserialized with VersionedMessage.deserialize()");const s=e.shift(),n=e.shift(),o=U(e);let a=[];for(let g=0;g<o;g++){const t=e.slice(0,W);e=e.slice(W),a.push(u().encode(i.Buffer.from(t)))}const c=e.slice(0,W);e=e.slice(W);const l=U(e);let d=[];for(let g=0;g<l;g++){const t=e.shift(),r=U(e),s=e.slice(0,r);e=e.slice(r);const n=U(e),o=e.slice(0,n),a=u().encode(i.Buffer.from(o));e=e.slice(n),d.push({programIdIndex:t,accounts:s,data:a})}const h={header:{numRequiredSignatures:r,numReadonlySignedAccounts:s,numReadonlyUnsignedAccounts:n},recentBlockhash:u().encode(i.Buffer.from(c)),accountKeys:a,instructions:d};return new N(h)}}function L(t,e){if(!t)throw new Error(e||"Assertion failed")}let J;!function(t){t[t.BLOCKHEIGHT_EXCEEDED=0]="BLOCKHEIGHT_EXCEEDED",t[t.PROCESSED=1]="PROCESSED",t[t.TIMED_OUT=2]="TIMED_OUT"}(J||(J={}));const G=i.Buffer.alloc(64).fill(0);class Z{constructor(t){this.keys=void 0,this.programId=void 0,this.data=i.Buffer.alloc(0),this.programId=t.programId,this.keys=t.keys,t.data&&(this.data=t.data)}toJSON(){return{keys:this.keys.map((({pubkey:t,isSigner:e,isWritable:r})=>({pubkey:t.toJSON(),isSigner:e,isWritable:r}))),programId:this.programId.toJSON(),data:[...this.data]}}}class j{get signature(){return this.signatures.length>0?this.signatures[0].signature:null}constructor(t){if(this.signatures=[],this.feePayer=void 0,this.instructions=[],this.recentBlockhash=void 0,this.lastValidBlockHeight=void 0,this.nonceInfo=void 0,this._message=void 0,this._json=void 0,t)if(t.feePayer&&(this.feePayer=t.feePayer),t.signatures&&(this.signatures=t.signatures),Object.prototype.hasOwnProperty.call(t,"lastValidBlockHeight")){const{blockhash:e,lastValidBlockHeight:r}=t;this.recentBlockhash=e,this.lastValidBlockHeight=r}else{const{recentBlockhash:e,nonceInfo:r}=t;r&&(this.nonceInfo=r),this.recentBlockhash=e}}toJSON(){return{recentBlockhash:this.recentBlockhash||null,feePayer:this.feePayer?this.feePayer.toJSON():null,nonceInfo:this.nonceInfo?{nonce:this.nonceInfo.nonce,nonceInstruction:this.nonceInfo.nonceInstruction.toJSON()}:null,instructions:this.instructions.map((t=>t.toJSON())),signers:this.signatures.map((({publicKey:t})=>t.toJSON()))}}add(...t){if(0===t.length)throw new Error("No instructions");return t.forEach((t=>{"instructions"in t?this.instructions=this.instructions.concat(t.instructions):"data"in t&&"programId"in t&&"keys"in t?this.instructions.push(t):this.instructions.push(new Z(t))})),this}compileMessage(){if(this._message&&JSON.stringify(this.toJSON())===JSON.stringify(this._json))return this._message;let t,e,r;if(this.nonceInfo?(t=this.nonceInfo.nonce,e=this.instructions[0]!=this.nonceInfo.nonceInstruction?[this.nonceInfo.nonceInstruction,...this.instructions]:this.instructions):(t=this.recentBlockhash,e=this.instructions),!t)throw new Error("Transaction recentBlockhash required");if(e.length<1&&console.warn("No instructions provided"),this.feePayer)r=this.feePayer;else{if(!(this.signatures.length>0&&this.signatures[0].publicKey))throw new Error("Transaction fee payer required");r=this.signatures[0].publicKey}for(let u=0;u<e.length;u++)if(void 0===e[u].programId)throw new Error(`Transaction instruction index ${u} has undefined program id`);const i=[],s=[];e.forEach((t=>{t.keys.forEach((t=>{s.push({...t})}));const e=t.programId.toString();i.includes(e)||i.push(e)})),i.forEach((t=>{s.push({pubkey:new E(t),isSigner:!1,isWritable:!1})}));const n=[];s.forEach((t=>{const e=t.pubkey.toString(),r=n.findIndex((t=>t.pubkey.toString()===e));r>-1?(n[r].isWritable=n[r].isWritable||t.isWritable,n[r].isSigner=n[r].isSigner||t.isSigner):n.push(t)})),n.sort((function(t,e){return t.isSigner!==e.isSigner?t.isSigner?-1:1:t.isWritable!==e.isWritable?t.isWritable?-1:1:t.pubkey.toBase58().localeCompare(e.pubkey.toBase58())}));const o=n.findIndex((t=>t.pubkey.equals(r)));if(o>-1){const[t]=n.splice(o,1);t.isSigner=!0,t.isWritable=!0,n.unshift(t)}else n.unshift({pubkey:r,isSigner:!0,isWritable:!0});for(const u of this.signatures){const t=n.findIndex((t=>t.pubkey.equals(u.publicKey)));if(!(t>-1))throw new Error(`unknown signer: ${u.publicKey.toString()}`);n[t].isSigner||(n[t].isSigner=!0,console.warn("Transaction references a signature that is unnecessary, only the fee payer and instruction signer accounts should sign a transaction. This behavior is deprecated and will throw an error in the next major version release."))}let a=0,c=0,l=0;const d=[],h=[];n.forEach((({pubkey:t,isSigner:e,isWritable:r})=>{e?(d.push(t.toString()),a+=1,r||(c+=1)):(h.push(t.toString()),r||(l+=1))}));const g=d.concat(h),p=e.map((t=>{const{data:e,programId:r}=t;return{programIdIndex:g.indexOf(r.toString()),accounts:t.keys.map((t=>g.indexOf(t.pubkey.toString()))),data:u().encode(e)}}));return p.forEach((t=>{L(t.programIdIndex>=0),t.accounts.forEach((t=>L(t>=0)))})),new N({header:{numRequiredSignatures:a,numReadonlySignedAccounts:c,numReadonlyUnsignedAccounts:l},accountKeys:g,recentBlockhash:t,instructions:p})}_compile(){const t=this.compileMessage(),e=t.accountKeys.slice(0,t.header.numRequiredSignatures);if(this.signatures.length===e.length){if(this.signatures.every(((t,r)=>e[r].equals(t.publicKey))))return t}return this.signatures=e.map((t=>({signature:null,publicKey:t}))),t}serializeMessage(){return this._compile().serialize()}async getEstimatedFee(t){return(await t.getFeeForMessage(this.compileMessage())).value}setSigners(...t){if(0===t.length)throw new Error("No signers");const e=new Set;this.signatures=t.filter((t=>{const r=t.toString();return!e.has(r)&&(e.add(r),!0)})).map((t=>({signature:null,publicKey:t})))}sign(...t){if(0===t.length)throw new Error("No signers");const e=new Set,r=[];for(const s of t){const t=s.publicKey.toString();e.has(t)||(e.add(t),r.push(s))}this.signatures=r.map((t=>({signature:null,publicKey:t.publicKey})));const i=this._compile();this._partialSign(i,...r)}partialSign(...t){if(0===t.length)throw new Error("No signers");const e=new Set,r=[];for(const s of t){const t=s.publicKey.toString();e.has(t)||(e.add(t),r.push(s))}const i=this._compile();this._partialSign(i,...r)}_partialSign(t,...e){const r=t.serialize();e.forEach((t=>{const e=x(r,t.secretKey);this._addSignature(t.publicKey,v(e))}))}addSignature(t,e){this._compile(),this._addSignature(t,e)}_addSignature(t,e){L(64===e.length);const r=this.signatures.findIndex((e=>t.equals(e.publicKey)));if(r<0)throw new Error(`unknown signer: ${t.toString()}`);this.signatures[r].signature=i.Buffer.from(e)}verifySignatures(){return this._verifySignatures(this.serializeMessage(),!0)}_verifySignatures(t,e){for(const{signature:r,publicKey:i}of this.signatures)if(null===r){if(e)return!1}else if(!B(r,t,i.toBuffer()))return!1;return!0}serialize(t){const{requireAllSignatures:e,verifySignatures:r}=Object.assign({requireAllSignatures:!0,verifySignatures:!0},t),i=this.serializeMessage();if(r&&!this._verifySignatures(i,e))throw new Error("Signature verification failed");return this._serialize(i)}_serialize(t){const{signatures:e}=this,r=[];K(r,e.length);const s=r.length+64*e.length+t.length,n=i.Buffer.alloc(s);return L(e.length<256),i.Buffer.from(r).copy(n,0),e.forEach((({signature:t},e)=>{null!==t&&(L(64===t.length,"signature has invalid length"),i.Buffer.from(t).copy(n,r.length+64*e))})),t.copy(n,r.length+64*e.length),L(n.length<=C,`Transaction too large: ${n.length} > 1232`),n}get keys(){return L(1===this.instructions.length),this.instructions[0].keys.map((t=>t.pubkey))}get programId(){return L(1===this.instructions.length),this.instructions[0].programId}get data(){return L(1===this.instructions.length),this.instructions[0].data}static from(t){let e=[...t];const r=U(e);let s=[];for(let n=0;n<r;n++){const t=e.slice(0,64);e=e.slice(64),s.push(u().encode(i.Buffer.from(t)))}return j.populate(N.from(e),s)}static populate(t,e=[]){const r=new j;return r.recentBlockhash=t.recentBlockhash,t.header.numRequiredSignatures>0&&(r.feePayer=t.accountKeys[0]),e.forEach(((e,i)=>{const s={signature:e==u().encode(G)?null:u().decode(e),publicKey:t.accountKeys[i]};r.signatures.push(s)})),t.instructions.forEach((e=>{const i=e.accounts.map((e=>{const i=t.accountKeys[e];return{pubkey:i,isSigner:r.signatures.some((t=>t.publicKey.toString()===i.toString()))||t.isAccountSigner(e),isWritable:t.isAccountWritable(e)}}));r.instructions.push(new Z({keys:i,programId:t.accountKeys[e.programIdIndex],data:u().decode(e.data)}))})),r._message=t,r._json=r.toJSON(),r}}const M=new E("SysvarC1ock11111111111111111111111111111111"),H=(new E("SysvarEpochSchedu1e111111111111111111111111"),new E("Sysvar1nstructions1111111111111111111111111"),new E("SysvarRecentB1ockHashes11111111111111111111")),X=new E("SysvarRent111111111111111111111111111111111"),$=(new E("SysvarRewards111111111111111111111111111111"),new E("SysvarS1otHashes111111111111111111111111111"),new E("SysvarS1otHistory11111111111111111111111111"),new E("SysvarStakeHistory1111111111111111111111111"));async function D(t,e,r,i){const s=i&&{skipPreflight:i.skipPreflight,preflightCommitment:i.preflightCommitment||i.commitment,maxRetries:i.maxRetries,minContextSlot:i.minContextSlot},n=await t.sendTransaction(e,r,s),o=null!=e.recentBlockhash&&null!=e.lastValidBlockHeight?(await t.confirmTransaction({signature:n,blockhash:e.recentBlockhash,lastValidBlockHeight:e.lastValidBlockHeight},i&&i.commitment)).value:(await t.confirmTransaction(n,i&&i.commitment)).value;if(o.err)throw new Error(`Transaction ${n} failed (${JSON.stringify(o)})`);return n}function F(t){return new Promise((e=>setTimeout(e,t)))}function V(t,e){const r=t.layout.span>=0?t.layout.span:function(t,e){const r=t=>{if(t.span>=0)return t.span;if("function"===typeof t.alloc)return t.alloc(e[t.property]);if("count"in t&&"elementLayout"in t){const i=e[t.property];if(Array.isArray(i))return i.length*r(t.elementLayout)}return 0};let i=0;return t.layout.fields.forEach((t=>{i+=r(t)})),i}(t,e),s=i.Buffer.alloc(r),n=Object.assign({instruction:t.index},e);return t.layout.encode(n,s),s}const Q=h._O("lamportsPerSignature"),Y=h.n_([h.Jq("version"),h.Jq("state"),z("authorizedPubkey"),z("nonce"),h.n_([Q],"feeCalculator")]),tt=Y.span;class et{constructor(t){this.authorizedPubkey=void 0,this.nonce=void 0,this.feeCalculator=void 0,this.authorizedPubkey=t.authorizedPubkey,this.nonce=t.nonce,this.feeCalculator=t.feeCalculator}static fromAccountData(t){const e=Y.decode(v(t),0);return new et({authorizedPubkey:new E(e.authorizedPubkey),nonce:new E(e.nonce).toString(),feeCalculator:e.feeCalculator})}}const rt=(it=8,t=>{const e=(0,h.Ik)(it,t),{encode:r,decode:s}=(t=>({decode:t.decode.bind(t),encode:t.encode.bind(t)}))(e),n=e;return n.decode=(t,e)=>{const r=s(t,e);return(0,g.oU)(i.Buffer.from(r))},n.encode=(t,e,i)=>{const s=(0,g.k$)(t,it);return r(s,e,i)},n});var it;const st=Object.freeze({Create:{index:0,layout:h.n_([h.Jq("instruction"),h.gM("lamports"),h.gM("space"),z("programId")])},Assign:{index:1,layout:h.n_([h.Jq("instruction"),z("programId")])},Transfer:{index:2,layout:h.n_([h.Jq("instruction"),rt("lamports")])},CreateWithSeed:{index:3,layout:h.n_([h.Jq("instruction"),z("base"),O("seed"),h.gM("lamports"),h.gM("space"),z("programId")])},AdvanceNonceAccount:{index:4,layout:h.n_([h.Jq("instruction")])},WithdrawNonceAccount:{index:5,layout:h.n_([h.Jq("instruction"),h.gM("lamports")])},InitializeNonceAccount:{index:6,layout:h.n_([h.Jq("instruction"),z("authorized")])},AuthorizeNonceAccount:{index:7,layout:h.n_([h.Jq("instruction"),z("authorized")])},Allocate:{index:8,layout:h.n_([h.Jq("instruction"),h.gM("space")])},AllocateWithSeed:{index:9,layout:h.n_([h.Jq("instruction"),z("base"),O("seed"),h.gM("space"),z("programId")])},AssignWithSeed:{index:10,layout:h.n_([h.Jq("instruction"),z("base"),O("seed"),z("programId")])},TransferWithSeed:{index:11,layout:h.n_([h.Jq("instruction"),rt("lamports"),O("seed"),z("programId")])},UpgradeNonceAccount:{index:12,layout:h.n_([h.Jq("instruction")])}});class nt{constructor(){}static createAccount(t){const e=V(st.Create,{lamports:t.lamports,space:t.space,programId:v(t.programId.toBuffer())});return new Z({keys:[{pubkey:t.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:t.newAccountPubkey,isSigner:!0,isWritable:!0}],programId:this.programId,data:e})}static transfer(t){let e,r;if("basePubkey"in t){e=V(st.TransferWithSeed,{lamports:BigInt(t.lamports),seed:t.seed,programId:v(t.programId.toBuffer())}),r=[{pubkey:t.fromPubkey,isSigner:!1,isWritable:!0},{pubkey:t.basePubkey,isSigner:!0,isWritable:!1},{pubkey:t.toPubkey,isSigner:!1,isWritable:!0}]}else{e=V(st.Transfer,{lamports:BigInt(t.lamports)}),r=[{pubkey:t.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:t.toPubkey,isSigner:!1,isWritable:!0}]}return new Z({keys:r,programId:this.programId,data:e})}static assign(t){let e,r;if("basePubkey"in t){e=V(st.AssignWithSeed,{base:v(t.basePubkey.toBuffer()),seed:t.seed,programId:v(t.programId.toBuffer())}),r=[{pubkey:t.accountPubkey,isSigner:!1,isWritable:!0},{pubkey:t.basePubkey,isSigner:!0,isWritable:!1}]}else{e=V(st.Assign,{programId:v(t.programId.toBuffer())}),r=[{pubkey:t.accountPubkey,isSigner:!0,isWritable:!0}]}return new Z({keys:r,programId:this.programId,data:e})}static createAccountWithSeed(t){const e=V(st.CreateWithSeed,{base:v(t.basePubkey.toBuffer()),seed:t.seed,lamports:t.lamports,space:t.space,programId:v(t.programId.toBuffer())});let r=[{pubkey:t.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:t.newAccountPubkey,isSigner:!1,isWritable:!0}];return t.basePubkey!=t.fromPubkey&&r.push({pubkey:t.basePubkey,isSigner:!0,isWritable:!1}),new Z({keys:r,programId:this.programId,data:e})}static createNonceAccount(t){const e=new j;"basePubkey"in t&&"seed"in t?e.add(nt.createAccountWithSeed({fromPubkey:t.fromPubkey,newAccountPubkey:t.noncePubkey,basePubkey:t.basePubkey,seed:t.seed,lamports:t.lamports,space:tt,programId:this.programId})):e.add(nt.createAccount({fromPubkey:t.fromPubkey,newAccountPubkey:t.noncePubkey,lamports:t.lamports,space:tt,programId:this.programId}));const r={noncePubkey:t.noncePubkey,authorizedPubkey:t.authorizedPubkey};return e.add(this.nonceInitialize(r)),e}static nonceInitialize(t){const e=V(st.InitializeNonceAccount,{authorized:v(t.authorizedPubkey.toBuffer())}),r={keys:[{pubkey:t.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:H,isSigner:!1,isWritable:!1},{pubkey:X,isSigner:!1,isWritable:!1}],programId:this.programId,data:e};return new Z(r)}static nonceAdvance(t){const e=V(st.AdvanceNonceAccount),r={keys:[{pubkey:t.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:H,isSigner:!1,isWritable:!1},{pubkey:t.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:e};return new Z(r)}static nonceWithdraw(t){const e=V(st.WithdrawNonceAccount,{lamports:t.lamports});return new Z({keys:[{pubkey:t.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:t.toPubkey,isSigner:!1,isWritable:!0},{pubkey:H,isSigner:!1,isWritable:!1},{pubkey:X,isSigner:!1,isWritable:!1},{pubkey:t.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:e})}static nonceAuthorize(t){const e=V(st.AuthorizeNonceAccount,{authorized:v(t.newAuthorizedPubkey.toBuffer())});return new Z({keys:[{pubkey:t.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:t.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:e})}static allocate(t){let e,r;if("basePubkey"in t){e=V(st.AllocateWithSeed,{base:v(t.basePubkey.toBuffer()),seed:t.seed,space:t.space,programId:v(t.programId.toBuffer())}),r=[{pubkey:t.accountPubkey,isSigner:!1,isWritable:!0},{pubkey:t.basePubkey,isSigner:!0,isWritable:!1}]}else{e=V(st.Allocate,{space:t.space}),r=[{pubkey:t.accountPubkey,isSigner:!0,isWritable:!0}]}return new Z({keys:r,programId:this.programId,data:e})}}nt.programId=new E("11111111111111111111111111111111");class ot{constructor(){}static getMinNumSignatures(t){return 2*(Math.ceil(t/ot.chunkSize)+1+1)}static async load(t,e,r,s,n){{const i=await t.getMinimumBalanceForRentExemption(n.length),o=await t.getAccountInfo(r.publicKey,"confirmed");let a=null;if(null!==o){if(o.executable)return console.error("Program load failed, account is already executable"),!1;o.data.length!==n.length&&(a=a||new j,a.add(nt.allocate({accountPubkey:r.publicKey,space:n.length}))),o.owner.equals(s)||(a=a||new j,a.add(nt.assign({accountPubkey:r.publicKey,programId:s}))),o.lamports<i&&(a=a||new j,a.add(nt.transfer({fromPubkey:e.publicKey,toPubkey:r.publicKey,lamports:i-o.lamports})))}else a=(new j).add(nt.createAccount({fromPubkey:e.publicKey,newAccountPubkey:r.publicKey,lamports:i>0?i:1,space:n.length,programId:s}));null!==a&&await D(t,a,[e,r],{commitment:"confirmed"})}const o=h.n_([h.Jq("instruction"),h.Jq("offset"),h.Jq("bytesLength"),h.Jq("bytesLengthPadding"),h.A9(h.u8("byte"),h.cv(h.Jq(),-8),"bytes")]),a=ot.chunkSize;let c=0,u=n,l=[];for(;u.length>0;){const n=u.slice(0,a),d=i.Buffer.alloc(a+16);o.encode({instruction:0,offset:c,bytes:n,bytesLength:0,bytesLengthPadding:0},d);const h=(new j).add({keys:[{pubkey:r.publicKey,isSigner:!0,isWritable:!0}],programId:s,data:d});if(l.push(D(t,h,[e,r],{commitment:"confirmed"})),t._rpcEndpoint.includes("solana.com")){const t=4;await F(1e3/t)}c+=a,u=u.slice(a)}await Promise.all(l);{const n=h.n_([h.Jq("instruction")]),o=i.Buffer.alloc(n.span);n.encode({instruction:1},o);const a=(new j).add({keys:[{pubkey:r.publicKey,isSigner:!0,isWritable:!0},{pubkey:X,isSigner:!1,isWritable:!1}],programId:s,data:o});await D(t,a,[e,r],{commitment:"confirmed"})}return!0}}ot.chunkSize=932;new E("BPFLoader2111111111111111111111111111111111");var at=Object.prototype.toString,ct=Object.keys||function(t){var e=[];for(var r in t)e.push(r);return e};function ut(t,e){var r,i,s,n,o,a,c;if(!0===t)return"true";if(!1===t)return"false";switch(typeof t){case"object":if(null===t)return null;if(t.toJSON&&"function"===typeof t.toJSON)return ut(t.toJSON(),e);if("[object Array]"===(c=at.call(t))){for(s="[",i=t.length-1,r=0;r<i;r++)s+=ut(t[r],!0)+",";return i>-1&&(s+=ut(t[r],!0)),s+"]"}if("[object Object]"===c){for(i=(n=ct(t).sort()).length,s="",r=0;r<i;)void 0!==(a=ut(t[o=n[r]],!1))&&(s&&(s+=","),s+=JSON.stringify(o)+":"+a),r++;return"{"+s+"}"}return JSON.stringify(t);case"function":case"undefined":return e?null:void 0;case"string":return JSON.stringify(t);default:return isFinite(t)?t:null}}var lt=function(t){var e=ut(t,!1);if(void 0!==e)return""+e};function dt(t){let e=0;for(;t>1;)t/=2,e++;return e}class ht{constructor(t,e,r,i,s){this.slotsPerEpoch=void 0,this.leaderScheduleSlotOffset=void 0,this.warmup=void 0,this.firstNormalEpoch=void 0,this.firstNormalSlot=void 0,this.slotsPerEpoch=t,this.leaderScheduleSlotOffset=e,this.warmup=r,this.firstNormalEpoch=i,this.firstNormalSlot=s}getEpoch(t){return this.getEpochAndSlotIndex(t)[0]}getEpochAndSlotIndex(t){if(t<this.firstNormalSlot){const r=dt(0===(e=t+32+1)?1:(e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,1+(e|=e>>32)))-dt(32)-1;return[r,t-(this.getSlotsInEpoch(r)-32)]}{const e=t-this.firstNormalSlot,r=Math.floor(e/this.slotsPerEpoch);return[this.firstNormalEpoch+r,e%this.slotsPerEpoch]}var e}getFirstSlotInEpoch(t){return t<=this.firstNormalEpoch?32*(Math.pow(2,t)-1):(t-this.firstNormalEpoch)*this.slotsPerEpoch+this.firstNormalSlot}getLastSlotInEpoch(t){return this.getFirstSlotInEpoch(t)+this.getSlotsInEpoch(t)-1}getSlotsInEpoch(t){return t<this.firstNormalEpoch?Math.pow(2,t+dt(32)):this.slotsPerEpoch}}class gt extends Error{constructor(t,e){super(t),this.logs=void 0,this.logs=e}}class pt extends Error{constructor({code:t,message:e,data:r},i){super(null!=i?`${i}: ${e}`:e),this.code=void 0,this.data=void 0,this.code=t,this.data=r,this.name="SolanaJSONRPCError"}}var bt=globalThis.fetch;class mt{constructor(t){this.key=void 0,this.state=void 0,this.key=t.key,this.state=t.state}isActive(){return this.state.deactivationSlot===2n**64n-1n}static deserialize(t){const e=function(t,e){let r;try{r=t.layout.decode(e)}catch(i){throw new Error("invalid instruction; "+i)}if(r.typeIndex!==t.index)throw new Error(`invalid account data; account type mismatch ${r.typeIndex} != ${t.index}`);return r}(ft,t),r=t.length-56;L(r>=0,"lookup table is invalid"),L(r%32===0,"lookup table is invalid");const i=r/32,{addresses:s}=h.n_([h.A9(z(),i,"addresses")]).decode(t.slice(56));return{deactivationSlot:e.deactivationSlot,lastExtendedSlot:e.lastExtendedSlot,lastExtendedSlotStartIndex:e.lastExtendedStartIndex,authority:0!==e.authority.length?new E(e.authority[0]):void 0,addresses:s.map((t=>new E(t)))}}}const ft={index:1,layout:h.n_([h.Jq("typeIndex"),rt("deactivationSlot"),h._O("lastExtendedSlot"),h.u8("lastExtendedStartIndex"),h.u8(),h.A9(z(),h.cv(h.u8(),-1),"authority")])},yt=/^[^:]+:\/\/([^:[]+|\[[^\]]+\])(:\d+)?(.*)/i;var kt;const wt=(0,p.oQ)((0,p.eE)(E),(0,p.Z_)(),(t=>new E(t))),St=(0,p.bc)([(0,p.Z_)(),(0,p.i0)("base64")]),_t=(0,p.oQ)((0,p.eE)(i.Buffer),St,(t=>i.Buffer.from(t[0],"base64")));function It(t){let e,r;if("string"===typeof t)e=t;else if(t){const{commitment:i,...s}=t;e=i,r=s}return{commitment:e,config:r}}function At(t){return(0,p.G0)([(0,p.dt)({jsonrpc:(0,p.i0)("2.0"),id:(0,p.Z_)(),result:t}),(0,p.dt)({jsonrpc:(0,p.i0)("2.0"),id:(0,p.Z_)(),error:(0,p.dt)({code:(0,p._4)(),message:(0,p.Z_)(),data:(0,p.jt)((0,p.Yj)())})})])}const xt=At((0,p._4)());function Bt(t){return(0,p.oQ)(At(t),xt,(e=>"error"in e?e:{...e,result:(0,p.Ue)(e.result,t)}))}function vt(t){return Bt((0,p.dt)({context:(0,p.dt)({slot:(0,p.Rx)()}),value:t}))}function Rt(t){return(0,p.dt)({context:(0,p.dt)({slot:(0,p.Rx)()}),value:t})}const Pt=(0,p.dt)({foundation:(0,p.Rx)(),foundationTerm:(0,p.Rx)(),initial:(0,p.Rx)(),taper:(0,p.Rx)(),terminal:(0,p.Rx)()}),Wt=Bt((0,p.IX)((0,p.AG)((0,p.dt)({epoch:(0,p.Rx)(),effectiveSlot:(0,p.Rx)(),amount:(0,p.Rx)(),postBalance:(0,p.Rx)()})))),Et=(0,p.dt)({epoch:(0,p.Rx)(),slotIndex:(0,p.Rx)(),slotsInEpoch:(0,p.Rx)(),absoluteSlot:(0,p.Rx)(),blockHeight:(0,p.jt)((0,p.Rx)()),transactionCount:(0,p.jt)((0,p.Rx)())}),Ct=(0,p.dt)({slotsPerEpoch:(0,p.Rx)(),leaderScheduleSlotOffset:(0,p.Rx)(),warmup:(0,p.O7)(),firstNormalEpoch:(0,p.Rx)(),firstNormalSlot:(0,p.Rx)()}),Tt=(0,p.IM)((0,p.Z_)(),(0,p.IX)((0,p.Rx)())),qt=(0,p.AG)((0,p.G0)([(0,p.dt)({}),(0,p.Z_)()])),zt=(0,p.dt)({err:qt}),Ot=(0,p.i0)("receivedSignature"),Ut=(0,p.dt)({"solana-core":(0,p.Z_)(),"feature-set":(0,p.jt)((0,p.Rx)())}),Kt=vt((0,p.dt)({err:(0,p.AG)((0,p.G0)([(0,p.dt)({}),(0,p.Z_)()])),logs:(0,p.AG)((0,p.IX)((0,p.Z_)())),accounts:(0,p.jt)((0,p.AG)((0,p.IX)((0,p.AG)((0,p.dt)({executable:(0,p.O7)(),owner:(0,p.Z_)(),lamports:(0,p.Rx)(),data:(0,p.IX)((0,p.Z_)()),rentEpoch:(0,p.jt)((0,p.Rx)())}))))),unitsConsumed:(0,p.jt)((0,p.Rx)()),returnData:(0,p.jt)((0,p.AG)((0,p.dt)({programId:(0,p.Z_)(),data:(0,p.bc)([(0,p.Z_)(),(0,p.i0)("base64")])})))})),Nt=vt((0,p.dt)({byIdentity:(0,p.IM)((0,p.Z_)(),(0,p.IX)((0,p.Rx)())),range:(0,p.dt)({firstSlot:(0,p.Rx)(),lastSlot:(0,p.Rx)()})}));const Lt=Bt(Pt),Jt=Bt(Et),Gt=Bt(Ct),Zt=Bt(Tt),jt=Bt((0,p.Rx)()),Mt=vt((0,p.dt)({total:(0,p.Rx)(),circulating:(0,p.Rx)(),nonCirculating:(0,p.Rx)(),nonCirculatingAccounts:(0,p.IX)(wt)})),Ht=(0,p.dt)({amount:(0,p.Z_)(),uiAmount:(0,p.AG)((0,p.Rx)()),decimals:(0,p.Rx)(),uiAmountString:(0,p.jt)((0,p.Z_)())}),Xt=vt((0,p.IX)((0,p.dt)({address:wt,amount:(0,p.Z_)(),uiAmount:(0,p.AG)((0,p.Rx)()),decimals:(0,p.Rx)(),uiAmountString:(0,p.jt)((0,p.Z_)())}))),$t=vt((0,p.IX)((0,p.dt)({pubkey:wt,account:(0,p.dt)({executable:(0,p.O7)(),owner:wt,lamports:(0,p.Rx)(),data:_t,rentEpoch:(0,p.Rx)()})}))),Dt=(0,p.dt)({program:(0,p.Z_)(),parsed:(0,p._4)(),space:(0,p.Rx)()}),Ft=vt((0,p.IX)((0,p.dt)({pubkey:wt,account:(0,p.dt)({executable:(0,p.O7)(),owner:wt,lamports:(0,p.Rx)(),data:Dt,rentEpoch:(0,p.Rx)()})}))),Vt=vt((0,p.IX)((0,p.dt)({lamports:(0,p.Rx)(),address:wt}))),Qt=(0,p.dt)({executable:(0,p.O7)(),owner:wt,lamports:(0,p.Rx)(),data:_t,rentEpoch:(0,p.Rx)()}),Yt=(0,p.dt)({pubkey:wt,account:Qt}),te=(0,p.oQ)((0,p.G0)([(0,p.eE)(i.Buffer),Dt]),(0,p.G0)([St,Dt]),(t=>Array.isArray(t)?(0,p.Ue)(t,_t):t)),ee=(0,p.dt)({executable:(0,p.O7)(),owner:wt,lamports:(0,p.Rx)(),data:te,rentEpoch:(0,p.Rx)()}),re=(0,p.dt)({pubkey:wt,account:ee}),ie=(0,p.dt)({state:(0,p.G0)([(0,p.i0)("active"),(0,p.i0)("inactive"),(0,p.i0)("activating"),(0,p.i0)("deactivating")]),active:(0,p.Rx)(),inactive:(0,p.Rx)()}),se=Bt((0,p.IX)((0,p.dt)({signature:(0,p.Z_)(),slot:(0,p.Rx)(),err:qt,memo:(0,p.AG)((0,p.Z_)()),blockTime:(0,p.jt)((0,p.AG)((0,p.Rx)()))}))),ne=Bt((0,p.IX)((0,p.dt)({signature:(0,p.Z_)(),slot:(0,p.Rx)(),err:qt,memo:(0,p.AG)((0,p.Z_)()),blockTime:(0,p.jt)((0,p.AG)((0,p.Rx)()))}))),oe=(0,p.dt)({subscription:(0,p.Rx)(),result:Rt(Qt)}),ae=(0,p.dt)({pubkey:wt,account:Qt}),ce=(0,p.dt)({subscription:(0,p.Rx)(),result:Rt(ae)}),ue=(0,p.dt)({parent:(0,p.Rx)(),slot:(0,p.Rx)(),root:(0,p.Rx)()}),le=(0,p.dt)({subscription:(0,p.Rx)(),result:ue}),de=(0,p.G0)([(0,p.dt)({type:(0,p.G0)([(0,p.i0)("firstShredReceived"),(0,p.i0)("completed"),(0,p.i0)("optimisticConfirmation"),(0,p.i0)("root")]),slot:(0,p.Rx)(),timestamp:(0,p.Rx)()}),(0,p.dt)({type:(0,p.i0)("createdBank"),parent:(0,p.Rx)(),slot:(0,p.Rx)(),timestamp:(0,p.Rx)()}),(0,p.dt)({type:(0,p.i0)("frozen"),slot:(0,p.Rx)(),timestamp:(0,p.Rx)(),stats:(0,p.dt)({numTransactionEntries:(0,p.Rx)(),numSuccessfulTransactions:(0,p.Rx)(),numFailedTransactions:(0,p.Rx)(),maxTransactionsPerEntry:(0,p.Rx)()})}),(0,p.dt)({type:(0,p.i0)("dead"),slot:(0,p.Rx)(),timestamp:(0,p.Rx)(),err:(0,p.Z_)()})]),he=(0,p.dt)({subscription:(0,p.Rx)(),result:de}),ge=(0,p.dt)({subscription:(0,p.Rx)(),result:Rt((0,p.G0)([zt,Ot]))}),pe=(0,p.dt)({subscription:(0,p.Rx)(),result:(0,p.Rx)()}),be=(0,p.dt)({pubkey:(0,p.Z_)(),gossip:(0,p.AG)((0,p.Z_)()),tpu:(0,p.AG)((0,p.Z_)()),rpc:(0,p.AG)((0,p.Z_)()),version:(0,p.AG)((0,p.Z_)())}),me=(0,p.dt)({votePubkey:(0,p.Z_)(),nodePubkey:(0,p.Z_)(),activatedStake:(0,p.Rx)(),epochVoteAccount:(0,p.O7)(),epochCredits:(0,p.IX)((0,p.bc)([(0,p.Rx)(),(0,p.Rx)(),(0,p.Rx)()])),commission:(0,p.Rx)(),lastVote:(0,p.Rx)(),rootSlot:(0,p.AG)((0,p.Rx)())}),fe=Bt((0,p.dt)({current:(0,p.IX)(me),delinquent:(0,p.IX)(me)})),ye=(0,p.G0)([(0,p.i0)("processed"),(0,p.i0)("confirmed"),(0,p.i0)("finalized")]),ke=(0,p.dt)({slot:(0,p.Rx)(),confirmations:(0,p.AG)((0,p.Rx)()),err:qt,confirmationStatus:(0,p.jt)(ye)}),we=vt((0,p.IX)((0,p.AG)(ke))),Se=Bt((0,p.Rx)()),_e=(0,p.dt)({signatures:(0,p.IX)((0,p.Z_)()),message:(0,p.dt)({accountKeys:(0,p.IX)((0,p.Z_)()),header:(0,p.dt)({numRequiredSignatures:(0,p.Rx)(),numReadonlySignedAccounts:(0,p.Rx)(),numReadonlyUnsignedAccounts:(0,p.Rx)()}),instructions:(0,p.IX)((0,p.dt)({accounts:(0,p.IX)((0,p.Rx)()),data:(0,p.Z_)(),programIdIndex:(0,p.Rx)()})),recentBlockhash:(0,p.Z_)()})}),Ie=(0,p.dt)({parsed:(0,p._4)(),program:(0,p.Z_)(),programId:wt}),Ae=(0,p.dt)({accounts:(0,p.IX)(wt),data:(0,p.Z_)(),programId:wt}),xe=(0,p.G0)([Ae,Ie]),Be=(0,p.G0)([(0,p.dt)({parsed:(0,p._4)(),program:(0,p.Z_)(),programId:(0,p.Z_)()}),(0,p.dt)({accounts:(0,p.IX)((0,p.Z_)()),data:(0,p.Z_)(),programId:(0,p.Z_)()})]),ve=(0,p.oQ)(xe,Be,(t=>"accounts"in t?(0,p.Ue)(t,Ae):(0,p.Ue)(t,Ie))),Re=(0,p.dt)({signatures:(0,p.IX)((0,p.Z_)()),message:(0,p.dt)({accountKeys:(0,p.IX)((0,p.dt)({pubkey:wt,signer:(0,p.O7)(),writable:(0,p.O7)()})),instructions:(0,p.IX)(ve),recentBlockhash:(0,p.Z_)()})}),Pe=(0,p.dt)({accountIndex:(0,p.Rx)(),mint:(0,p.Z_)(),owner:(0,p.jt)((0,p.Z_)()),uiTokenAmount:Ht}),We=(0,p.dt)({writable:(0,p.IX)(wt),readonly:(0,p.IX)(wt)}),Ee=(0,p.dt)({err:qt,fee:(0,p.Rx)(),innerInstructions:(0,p.jt)((0,p.AG)((0,p.IX)((0,p.dt)({index:(0,p.Rx)(),instructions:(0,p.IX)((0,p.dt)({accounts:(0,p.IX)((0,p.Rx)()),data:(0,p.Z_)(),programIdIndex:(0,p.Rx)()}))})))),preBalances:(0,p.IX)((0,p.Rx)()),postBalances:(0,p.IX)((0,p.Rx)()),logMessages:(0,p.jt)((0,p.AG)((0,p.IX)((0,p.Z_)()))),preTokenBalances:(0,p.jt)((0,p.AG)((0,p.IX)(Pe))),postTokenBalances:(0,p.jt)((0,p.AG)((0,p.IX)(Pe))),loadedAddresses:(0,p.jt)(We)}),Ce=(0,p.dt)({err:qt,fee:(0,p.Rx)(),innerInstructions:(0,p.jt)((0,p.AG)((0,p.IX)((0,p.dt)({index:(0,p.Rx)(),instructions:(0,p.IX)(ve)})))),preBalances:(0,p.IX)((0,p.Rx)()),postBalances:(0,p.IX)((0,p.Rx)()),logMessages:(0,p.jt)((0,p.AG)((0,p.IX)((0,p.Z_)()))),preTokenBalances:(0,p.jt)((0,p.AG)((0,p.IX)(Pe))),postTokenBalances:(0,p.jt)((0,p.AG)((0,p.IX)(Pe))),loadedAddresses:(0,p.jt)(We)}),Te=Bt((0,p.AG)((0,p.dt)({blockhash:(0,p.Z_)(),previousBlockhash:(0,p.Z_)(),parentSlot:(0,p.Rx)(),transactions:(0,p.IX)((0,p.dt)({transaction:_e,meta:(0,p.AG)(Ee)})),rewards:(0,p.jt)((0,p.IX)((0,p.dt)({pubkey:(0,p.Z_)(),lamports:(0,p.Rx)(),postBalance:(0,p.AG)((0,p.Rx)()),rewardType:(0,p.AG)((0,p.Z_)())}))),blockTime:(0,p.AG)((0,p.Rx)()),blockHeight:(0,p.AG)((0,p.Rx)())}))),qe=Bt((0,p.AG)((0,p.dt)({blockhash:(0,p.Z_)(),previousBlockhash:(0,p.Z_)(),parentSlot:(0,p.Rx)(),transactions:(0,p.IX)((0,p.dt)({transaction:_e,meta:(0,p.AG)(Ee)})),rewards:(0,p.jt)((0,p.IX)((0,p.dt)({pubkey:(0,p.Z_)(),lamports:(0,p.Rx)(),postBalance:(0,p.AG)((0,p.Rx)()),rewardType:(0,p.AG)((0,p.Z_)())}))),blockTime:(0,p.AG)((0,p.Rx)())}))),ze=Bt((0,p.AG)((0,p.dt)({blockhash:(0,p.Z_)(),previousBlockhash:(0,p.Z_)(),parentSlot:(0,p.Rx)(),signatures:(0,p.IX)((0,p.Z_)()),blockTime:(0,p.AG)((0,p.Rx)())}))),Oe=Bt((0,p.AG)((0,p.dt)({slot:(0,p.Rx)(),meta:Ee,blockTime:(0,p.jt)((0,p.AG)((0,p.Rx)())),transaction:_e}))),Ue=Bt((0,p.AG)((0,p.dt)({slot:(0,p.Rx)(),transaction:Re,meta:(0,p.AG)(Ce),blockTime:(0,p.jt)((0,p.AG)((0,p.Rx)()))}))),Ke=vt((0,p.dt)({blockhash:(0,p.Z_)(),feeCalculator:(0,p.dt)({lamportsPerSignature:(0,p.Rx)()})})),Ne=vt((0,p.dt)({blockhash:(0,p.Z_)(),lastValidBlockHeight:(0,p.Rx)()})),Le=(0,p.dt)({slot:(0,p.Rx)(),numTransactions:(0,p.Rx)(),numSlots:(0,p.Rx)(),samplePeriodSecs:(0,p.Rx)()}),Je=Bt((0,p.IX)(Le)),Ge=vt((0,p.AG)((0,p.dt)({feeCalculator:(0,p.dt)({lamportsPerSignature:(0,p.Rx)()})}))),Ze=Bt((0,p.Z_)()),je=Bt((0,p.Z_)()),Me=(0,p.dt)({err:qt,logs:(0,p.IX)((0,p.Z_)()),signature:(0,p.Z_)()}),He=(0,p.dt)({result:Rt(Me),subscription:(0,p.Rx)()}),Xe={"solana-client":`js/${null!==(kt="0.0.0-development")?kt:"UNKNOWN"}`};class $e{constructor(t,e){let r,i,s,n,o;var a;this._commitment=void 0,this._confirmTransactionInitialTimeout=void 0,this._rpcEndpoint=void 0,this._rpcWsEndpoint=void 0,this._rpcClient=void 0,this._rpcRequest=void 0,this._rpcBatchRequest=void 0,this._rpcWebSocket=void 0,this._rpcWebSocketConnected=!1,this._rpcWebSocketHeartbeat=null,this._rpcWebSocketIdleTimeout=null,this._rpcWebSocketGeneration=0,this._disableBlockhashCaching=!1,this._pollingBlockhash=!1,this._blockhashInfo={latestBlockhash:null,lastFetch:0,transactionSignatures:[],simulatedSignatures:[]},this._nextClientSubscriptionId=0,this._subscriptionDisposeFunctionsByClientSubscriptionId={},this._subscriptionCallbacksByServerSubscriptionId={},this._subscriptionsByHash={},this._subscriptionsAutoDisposedByRpc=new Set,e&&"string"===typeof e?this._commitment=e:e&&(this._commitment=e.commitment,this._confirmTransactionInitialTimeout=e.confirmTransactionInitialTimeout,r=e.wsEndpoint,i=e.httpHeaders,s=e.fetch,n=e.fetchMiddleware,o=e.disableRetryOnRateLimit),this._rpcEndpoint=function(t){if(!1===/^https?:/.test(t))throw new TypeError("Endpoint URL must start with `http:` or `https:`.");return t}(t),this._rpcWsEndpoint=r||function(t){const e=t.match(yt);if(null==e)throw TypeError(`Failed to validate endpoint URL \`${t}\``);const[r,i,s,n]=e,o=t.startsWith("https:")?"wss:":"ws:",a=null==s?null:parseInt(s.slice(1),10);return`${o}//${i}${null==a?"":`:${a+1}`}${n}`}(t),this._rpcClient=function(t,e,r,i,s){const n=r||bt;let o;return i&&(o=async(t,e)=>{const r=await new Promise(((r,s)=>{try{i(t,e,((t,e)=>r([t,e])))}catch(n){s(n)}}));return await n(...r)}),new(f())((async(r,i)=>{const a={method:"POST",body:r,agent:void 0,headers:Object.assign({"Content-Type":"application/json"},e||{},Xe)};try{let e,r=5,c=500;for(;e=o?await o(t,a):await n(t,a),429===e.status&&!0!==s&&(r-=1,0!==r);)console.log(`Server responded with ${e.status} ${e.statusText}.  Retrying after ${c}ms delay...`),await F(c),c*=2;const u=await e.text();e.ok?i(null,u):i(new Error(`${e.status} ${e.statusText}: ${u}`))}catch(c){c instanceof Error&&i(c)}}),{})}(t,i,s,n,o),this._rpcRequest=(a=this._rpcClient,(t,e)=>new Promise(((r,i)=>{a.request(t,e,((t,e)=>{t?i(t):r(e)}))}))),this._rpcBatchRequest=function(t){return e=>new Promise(((r,i)=>{0===e.length&&r([]);const s=e.map((e=>t.request(e.methodName,e.args)));t.request(s,((t,e)=>{t?i(t):r(e)}))}))}(this._rpcClient),this._rpcWebSocket=new b.K(this._rpcWsEndpoint,{autoconnect:!1,max_reconnects:1/0}),this._rpcWebSocket.on("open",this._wsOnOpen.bind(this)),this._rpcWebSocket.on("error",this._wsOnError.bind(this)),this._rpcWebSocket.on("close",this._wsOnClose.bind(this)),this._rpcWebSocket.on("accountNotification",this._wsOnAccountNotification.bind(this)),this._rpcWebSocket.on("programNotification",this._wsOnProgramAccountNotification.bind(this)),this._rpcWebSocket.on("slotNotification",this._wsOnSlotNotification.bind(this)),this._rpcWebSocket.on("slotsUpdatesNotification",this._wsOnSlotUpdatesNotification.bind(this)),this._rpcWebSocket.on("signatureNotification",this._wsOnSignatureNotification.bind(this)),this._rpcWebSocket.on("rootNotification",this._wsOnRootNotification.bind(this)),this._rpcWebSocket.on("logsNotification",this._wsOnLogsNotification.bind(this))}get commitment(){return this._commitment}get rpcEndpoint(){return this._rpcEndpoint}async getBalanceAndContext(t,e){const{commitment:r,config:i}=It(e),s=this._buildArgs([t.toBase58()],r,void 0,i),n=await this._rpcRequest("getBalance",s),o=(0,p.Ue)(n,vt((0,p.Rx)()));if("error"in o)throw new pt(o.error,`failed to get balance for ${t.toBase58()}`);return o.result}async getBalance(t,e){return await this.getBalanceAndContext(t,e).then((t=>t.value)).catch((e=>{throw new Error("failed to get balance of account "+t.toBase58()+": "+e)}))}async getBlockTime(t){const e=await this._rpcRequest("getBlockTime",[t]),r=(0,p.Ue)(e,Bt((0,p.AG)((0,p.Rx)())));if("error"in r)throw new pt(r.error,`failed to get block time for slot ${t}`);return r.result}async getMinimumLedgerSlot(){const t=await this._rpcRequest("minimumLedgerSlot",[]),e=(0,p.Ue)(t,Bt((0,p.Rx)()));if("error"in e)throw new pt(e.error,"failed to get minimum ledger slot");return e.result}async getFirstAvailableBlock(){const t=await this._rpcRequest("getFirstAvailableBlock",[]),e=(0,p.Ue)(t,jt);if("error"in e)throw new pt(e.error,"failed to get first available block");return e.result}async getSupply(t){let e={};e="string"===typeof t?{commitment:t}:t?{...t,commitment:t&&t.commitment||this.commitment}:{commitment:this.commitment};const r=await this._rpcRequest("getSupply",[e]),i=(0,p.Ue)(r,Mt);if("error"in i)throw new pt(i.error,"failed to get supply");return i.result}async getTokenSupply(t,e){const r=this._buildArgs([t.toBase58()],e),i=await this._rpcRequest("getTokenSupply",r),s=(0,p.Ue)(i,vt(Ht));if("error"in s)throw new pt(s.error,"failed to get token supply");return s.result}async getTokenAccountBalance(t,e){const r=this._buildArgs([t.toBase58()],e),i=await this._rpcRequest("getTokenAccountBalance",r),s=(0,p.Ue)(i,vt(Ht));if("error"in s)throw new pt(s.error,"failed to get token account balance");return s.result}async getTokenAccountsByOwner(t,e,r){const{commitment:i,config:s}=It(r);let n=[t.toBase58()];"mint"in e?n.push({mint:e.mint.toBase58()}):n.push({programId:e.programId.toBase58()});const o=this._buildArgs(n,i,"base64",s),a=await this._rpcRequest("getTokenAccountsByOwner",o),c=(0,p.Ue)(a,$t);if("error"in c)throw new pt(c.error,`failed to get token accounts owned by account ${t.toBase58()}`);return c.result}async getParsedTokenAccountsByOwner(t,e,r){let i=[t.toBase58()];"mint"in e?i.push({mint:e.mint.toBase58()}):i.push({programId:e.programId.toBase58()});const s=this._buildArgs(i,r,"jsonParsed"),n=await this._rpcRequest("getTokenAccountsByOwner",s),o=(0,p.Ue)(n,Ft);if("error"in o)throw new pt(o.error,`failed to get token accounts owned by account ${t.toBase58()}`);return o.result}async getLargestAccounts(t){const e={...t,commitment:t&&t.commitment||this.commitment},r=e.filter||e.commitment?[e]:[],i=await this._rpcRequest("getLargestAccounts",r),s=(0,p.Ue)(i,Vt);if("error"in s)throw new pt(s.error,"failed to get largest accounts");return s.result}async getTokenLargestAccounts(t,e){const r=this._buildArgs([t.toBase58()],e),i=await this._rpcRequest("getTokenLargestAccounts",r),s=(0,p.Ue)(i,Xt);if("error"in s)throw new pt(s.error,"failed to get token largest accounts");return s.result}async getAccountInfoAndContext(t,e){const{commitment:r,config:i}=It(e),s=this._buildArgs([t.toBase58()],r,"base64",i),n=await this._rpcRequest("getAccountInfo",s),o=(0,p.Ue)(n,vt((0,p.AG)(Qt)));if("error"in o)throw new pt(o.error,`failed to get info about account ${t.toBase58()}`);return o.result}async getParsedAccountInfo(t,e){const{commitment:r,config:i}=It(e),s=this._buildArgs([t.toBase58()],r,"jsonParsed",i),n=await this._rpcRequest("getAccountInfo",s),o=(0,p.Ue)(n,vt((0,p.AG)(ee)));if("error"in o)throw new pt(o.error,`failed to get info about account ${t.toBase58()}`);return o.result}async getAccountInfo(t,e){try{return(await this.getAccountInfoAndContext(t,e)).value}catch(r){throw new Error("failed to get info about account "+t.toBase58()+": "+r)}}async getMultipleAccountsInfoAndContext(t,e){const{commitment:r,config:i}=It(e),s=t.map((t=>t.toBase58())),n=this._buildArgs([s],r,"base64",i),o=await this._rpcRequest("getMultipleAccounts",n),a=(0,p.Ue)(o,vt((0,p.IX)((0,p.AG)(Qt))));if("error"in a)throw new pt(a.error,`failed to get info for accounts ${s}`);return a.result}async getMultipleAccountsInfo(t,e){return(await this.getMultipleAccountsInfoAndContext(t,e)).value}async getStakeActivation(t,e,r){const{commitment:i,config:s}=It(e),n=this._buildArgs([t.toBase58()],i,void 0,{...s,epoch:null!=r?r:null===s||void 0===s?void 0:s.epoch}),o=await this._rpcRequest("getStakeActivation",n),a=(0,p.Ue)(o,Bt(ie));if("error"in a)throw new pt(a.error,`failed to get Stake Activation ${t.toBase58()}`);return a.result}async getProgramAccounts(t,e){const{commitment:r,config:i}=It(e),{encoding:s,...n}=i||{},o=this._buildArgs([t.toBase58()],r,s||"base64",n),a=await this._rpcRequest("getProgramAccounts",o),c=(0,p.Ue)(a,Bt((0,p.IX)(Yt)));if("error"in c)throw new pt(c.error,`failed to get accounts owned by program ${t.toBase58()}`);return c.result}async getParsedProgramAccounts(t,e){const{commitment:r,config:i}=It(e),s=this._buildArgs([t.toBase58()],r,"jsonParsed",i),n=await this._rpcRequest("getProgramAccounts",s),o=(0,p.Ue)(n,Bt((0,p.IX)(re)));if("error"in o)throw new pt(o.error,`failed to get accounts owned by program ${t.toBase58()}`);return o.result}async confirmTransaction(t,e){let r,i;if("string"==typeof t)r=t;else{r=t.signature}try{i=u().decode(r)}catch(h){throw new Error("signature must be base58 encoded: "+r)}L(64===i.length,"signature has invalid length");const s=e||this.commitment;let n,o,a=!1;const c=new Promise(((t,e)=>{try{o=this.onSignature(r,((e,r)=>{o=void 0;const i={context:r,value:e};a=!0,t({__type:J.PROCESSED,response:i})}),s)}catch(h){e(h)}})),l=new Promise((r=>{if("string"===typeof t){let t=this._confirmTransactionInitialTimeout||6e4;switch(s){case"processed":case"recent":case"single":case"confirmed":case"singleGossip":t=this._confirmTransactionInitialTimeout||3e4}n=setTimeout((()=>r({__type:J.TIMED_OUT,timeoutMs:t})),t)}else{let i=t;const s=async()=>{try{return await this.getBlockHeight(e)}catch(t){return-1}};(async()=>{let t=await s();if(!a){for(;t<=i.lastValidBlockHeight;){if(await F(1e3),a)return;if(t=await s(),a)return}r({__type:J.BLOCKHEIGHT_EXCEEDED})}})()}}));let d;try{const t=await Promise.race([c,l]);switch(t.__type){case J.BLOCKHEIGHT_EXCEEDED:throw new T(r);case J.PROCESSED:d=t.response;break;case J.TIMED_OUT:throw new q(r,t.timeoutMs/1e3)}}finally{clearTimeout(n),o&&this.removeSignatureListener(o)}return d}async getClusterNodes(){const t=await this._rpcRequest("getClusterNodes",[]),e=(0,p.Ue)(t,Bt((0,p.IX)(be)));if("error"in e)throw new pt(e.error,"failed to get cluster nodes");return e.result}async getVoteAccounts(t){const e=this._buildArgs([],t),r=await this._rpcRequest("getVoteAccounts",e),i=(0,p.Ue)(r,fe);if("error"in i)throw new pt(i.error,"failed to get vote accounts");return i.result}async getSlot(t){const{commitment:e,config:r}=It(t),i=this._buildArgs([],e,void 0,r),s=await this._rpcRequest("getSlot",i),n=(0,p.Ue)(s,Bt((0,p.Rx)()));if("error"in n)throw new pt(n.error,"failed to get slot");return n.result}async getSlotLeader(t){const{commitment:e,config:r}=It(t),i=this._buildArgs([],e,void 0,r),s=await this._rpcRequest("getSlotLeader",i),n=(0,p.Ue)(s,Bt((0,p.Z_)()));if("error"in n)throw new pt(n.error,"failed to get slot leader");return n.result}async getSlotLeaders(t,e){const r=[t,e],i=await this._rpcRequest("getSlotLeaders",r),s=(0,p.Ue)(i,Bt((0,p.IX)(wt)));if("error"in s)throw new pt(s.error,"failed to get slot leaders");return s.result}async getSignatureStatus(t,e){const{context:r,value:i}=await this.getSignatureStatuses([t],e);L(1===i.length);return{context:r,value:i[0]}}async getSignatureStatuses(t,e){const r=[t];e&&r.push(e);const i=await this._rpcRequest("getSignatureStatuses",r),s=(0,p.Ue)(i,we);if("error"in s)throw new pt(s.error,"failed to get signature status");return s.result}async getTransactionCount(t){const{commitment:e,config:r}=It(t),i=this._buildArgs([],e,void 0,r),s=await this._rpcRequest("getTransactionCount",i),n=(0,p.Ue)(s,Bt((0,p.Rx)()));if("error"in n)throw new pt(n.error,"failed to get transaction count");return n.result}async getTotalSupply(t){return(await this.getSupply({commitment:t,excludeNonCirculatingAccountsList:!0})).value.total}async getInflationGovernor(t){const e=this._buildArgs([],t),r=await this._rpcRequest("getInflationGovernor",e),i=(0,p.Ue)(r,Lt);if("error"in i)throw new pt(i.error,"failed to get inflation");return i.result}async getInflationReward(t,e,r){const{commitment:i,config:s}=It(r),n=this._buildArgs([t.map((t=>t.toBase58()))],i,void 0,{...s,epoch:null!=e?e:null===s||void 0===s?void 0:s.epoch}),o=await this._rpcRequest("getInflationReward",n),a=(0,p.Ue)(o,Wt);if("error"in a)throw new pt(a.error,"failed to get inflation reward");return a.result}async getEpochInfo(t){const{commitment:e,config:r}=It(t),i=this._buildArgs([],e,void 0,r),s=await this._rpcRequest("getEpochInfo",i),n=(0,p.Ue)(s,Jt);if("error"in n)throw new pt(n.error,"failed to get epoch info");return n.result}async getEpochSchedule(){const t=await this._rpcRequest("getEpochSchedule",[]),e=(0,p.Ue)(t,Gt);if("error"in e)throw new pt(e.error,"failed to get epoch schedule");const r=e.result;return new ht(r.slotsPerEpoch,r.leaderScheduleSlotOffset,r.warmup,r.firstNormalEpoch,r.firstNormalSlot)}async getLeaderSchedule(){const t=await this._rpcRequest("getLeaderSchedule",[]),e=(0,p.Ue)(t,Zt);if("error"in e)throw new pt(e.error,"failed to get leader schedule");return e.result}async getMinimumBalanceForRentExemption(t,e){const r=this._buildArgs([t],e),i=await this._rpcRequest("getMinimumBalanceForRentExemption",r),s=(0,p.Ue)(i,Se);return"error"in s?(console.warn("Unable to fetch minimum balance for rent exemption"),0):s.result}async getRecentBlockhashAndContext(t){const e=this._buildArgs([],t),r=await this._rpcRequest("getRecentBlockhash",e),i=(0,p.Ue)(r,Ke);if("error"in i)throw new pt(i.error,"failed to get recent blockhash");return i.result}async getRecentPerformanceSamples(t){const e=await this._rpcRequest("getRecentPerformanceSamples",t?[t]:[]),r=(0,p.Ue)(e,Je);if("error"in r)throw new pt(r.error,"failed to get recent performance samples");return r.result}async getFeeCalculatorForBlockhash(t,e){const r=this._buildArgs([t],e),i=await this._rpcRequest("getFeeCalculatorForBlockhash",r),s=(0,p.Ue)(i,Ge);if("error"in s)throw new pt(s.error,"failed to get fee calculator");const{context:n,value:o}=s.result;return{context:n,value:null!==o?o.feeCalculator:null}}async getFeeForMessage(t,e){const r=t.serialize().toString("base64"),i=this._buildArgs([r],e),s=await this._rpcRequest("getFeeForMessage",i),n=(0,p.Ue)(s,vt((0,p.AG)((0,p.Rx)())));if("error"in n)throw new pt(n.error,"failed to get slot");if(null===n.result)throw new Error("invalid blockhash");return n.result}async getRecentBlockhash(t){try{return(await this.getRecentBlockhashAndContext(t)).value}catch(e){throw new Error("failed to get recent blockhash: "+e)}}async getLatestBlockhash(t){try{return(await this.getLatestBlockhashAndContext(t)).value}catch(e){throw new Error("failed to get recent blockhash: "+e)}}async getLatestBlockhashAndContext(t){const{commitment:e,config:r}=It(t),i=this._buildArgs([],e,void 0,r),s=await this._rpcRequest("getLatestBlockhash",i),n=(0,p.Ue)(s,Ne);if("error"in n)throw new pt(n.error,"failed to get latest blockhash");return n.result}async getVersion(){const t=await this._rpcRequest("getVersion",[]),e=(0,p.Ue)(t,Bt(Ut));if("error"in e)throw new pt(e.error,"failed to get version");return e.result}async getGenesisHash(){const t=await this._rpcRequest("getGenesisHash",[]),e=(0,p.Ue)(t,Bt((0,p.Z_)()));if("error"in e)throw new pt(e.error,"failed to get genesis hash");return e.result}async getBlock(t,e){const{commitment:r,config:i}=It(e),s=this._buildArgsAtLeastConfirmed([t],r,void 0,i),n=await this._rpcRequest("getBlock",s),o=(0,p.Ue)(n,Te);if("error"in o)throw new pt(o.error,"failed to get confirmed block");const a=o.result;return a?{...a,transactions:a.transactions.map((({transaction:t,meta:e})=>{const r=new N(t.message);return{meta:e,transaction:{...t,message:r}}}))}:a}async getBlockHeight(t){const{commitment:e,config:r}=It(t),i=this._buildArgs([],e,void 0,r),s=await this._rpcRequest("getBlockHeight",i),n=(0,p.Ue)(s,Bt((0,p.Rx)()));if("error"in n)throw new pt(n.error,"failed to get block height information");return n.result}async getBlockProduction(t){let e,r;if("string"===typeof t)r=t;else if(t){const{commitment:i,...s}=t;r=i,e=s}const i=this._buildArgs([],r,"base64",e),s=await this._rpcRequest("getBlockProduction",i),n=(0,p.Ue)(s,Nt);if("error"in n)throw new pt(n.error,"failed to get block production information");return n.result}async getTransaction(t,e){const{commitment:r,config:i}=It(e),s=this._buildArgsAtLeastConfirmed([t],r,void 0,i),n=await this._rpcRequest("getTransaction",s),o=(0,p.Ue)(n,Oe);if("error"in o)throw new pt(o.error,"failed to get transaction");const a=o.result;return a?{...a,transaction:{...a.transaction,message:new N(a.transaction.message)}}:a}async getParsedTransaction(t,e){const{commitment:r,config:i}=It(e),s=this._buildArgsAtLeastConfirmed([t],r,"jsonParsed",i),n=await this._rpcRequest("getTransaction",s),o=(0,p.Ue)(n,Ue);if("error"in o)throw new pt(o.error,"failed to get transaction");return o.result}async getParsedTransactions(t,e){const{commitment:r,config:i}=It(e),s=t.map((t=>({methodName:"getTransaction",args:this._buildArgsAtLeastConfirmed([t],r,"jsonParsed",i)})));return(await this._rpcBatchRequest(s)).map((t=>{const e=(0,p.Ue)(t,Ue);if("error"in e)throw new pt(e.error,"failed to get transactions");return e.result}))}async getTransactions(t,e){const{commitment:r,config:i}=It(e),s=t.map((t=>({methodName:"getTransaction",args:this._buildArgsAtLeastConfirmed([t],r,void 0,i)})));return(await this._rpcBatchRequest(s)).map((t=>{const e=(0,p.Ue)(t,Oe);if("error"in e)throw new pt(e.error,"failed to get transactions");const r=e.result;return r?{...r,transaction:{...r.transaction,message:new N(r.transaction.message)}}:r}))}async getConfirmedBlock(t,e){const r=this._buildArgsAtLeastConfirmed([t],e),i=await this._rpcRequest("getConfirmedBlock",r),s=(0,p.Ue)(i,qe);if("error"in s)throw new pt(s.error,"failed to get confirmed block");const n=s.result;if(!n)throw new Error("Confirmed block "+t+" not found");const o={...n,transactions:n.transactions.map((({transaction:t,meta:e})=>{const r=new N(t.message);return{meta:e,transaction:{...t,message:r}}}))};return{...o,transactions:o.transactions.map((({transaction:t,meta:e})=>({meta:e,transaction:j.populate(t.message,t.signatures)})))}}async getBlocks(t,e,r){const i=this._buildArgsAtLeastConfirmed(void 0!==e?[t,e]:[t],r),s=await this._rpcRequest("getBlocks",i),n=(0,p.Ue)(s,Bt((0,p.IX)((0,p.Rx)())));if("error"in n)throw new pt(n.error,"failed to get blocks");return n.result}async getBlockSignatures(t,e){const r=this._buildArgsAtLeastConfirmed([t],e,void 0,{transactionDetails:"signatures",rewards:!1}),i=await this._rpcRequest("getBlock",r),s=(0,p.Ue)(i,ze);if("error"in s)throw new pt(s.error,"failed to get block");const n=s.result;if(!n)throw new Error("Block "+t+" not found");return n}async getConfirmedBlockSignatures(t,e){const r=this._buildArgsAtLeastConfirmed([t],e,void 0,{transactionDetails:"signatures",rewards:!1}),i=await this._rpcRequest("getConfirmedBlock",r),s=(0,p.Ue)(i,ze);if("error"in s)throw new pt(s.error,"failed to get confirmed block");const n=s.result;if(!n)throw new Error("Confirmed block "+t+" not found");return n}async getConfirmedTransaction(t,e){const r=this._buildArgsAtLeastConfirmed([t],e),i=await this._rpcRequest("getConfirmedTransaction",r),s=(0,p.Ue)(i,Oe);if("error"in s)throw new pt(s.error,"failed to get transaction");const n=s.result;if(!n)return n;const o=new N(n.transaction.message),a=n.transaction.signatures;return{...n,transaction:j.populate(o,a)}}async getParsedConfirmedTransaction(t,e){const r=this._buildArgsAtLeastConfirmed([t],e,"jsonParsed"),i=await this._rpcRequest("getConfirmedTransaction",r),s=(0,p.Ue)(i,Ue);if("error"in s)throw new pt(s.error,"failed to get confirmed transaction");return s.result}async getParsedConfirmedTransactions(t,e){const r=t.map((t=>({methodName:"getConfirmedTransaction",args:this._buildArgsAtLeastConfirmed([t],e,"jsonParsed")})));return(await this._rpcBatchRequest(r)).map((t=>{const e=(0,p.Ue)(t,Ue);if("error"in e)throw new pt(e.error,"failed to get confirmed transactions");return e.result}))}async getConfirmedSignaturesForAddress(t,e,r){let i={},s=await this.getFirstAvailableBlock();for(;!("until"in i)&&!(--e<=0||e<s);)try{const t=await this.getConfirmedBlockSignatures(e,"finalized");t.signatures.length>0&&(i.until=t.signatures[t.signatures.length-1].toString())}catch(o){if(o instanceof Error&&o.message.includes("skipped"))continue;throw o}let n=await this.getSlot("finalized");for(;!("before"in i)&&!(++r>n);)try{const t=await this.getConfirmedBlockSignatures(r);t.signatures.length>0&&(i.before=t.signatures[t.signatures.length-1].toString())}catch(o){if(o instanceof Error&&o.message.includes("skipped"))continue;throw o}return(await this.getConfirmedSignaturesForAddress2(t,i)).map((t=>t.signature))}async getConfirmedSignaturesForAddress2(t,e,r){const i=this._buildArgsAtLeastConfirmed([t.toBase58()],r,void 0,e),s=await this._rpcRequest("getConfirmedSignaturesForAddress2",i),n=(0,p.Ue)(s,se);if("error"in n)throw new pt(n.error,"failed to get confirmed signatures for address");return n.result}async getSignaturesForAddress(t,e,r){const i=this._buildArgsAtLeastConfirmed([t.toBase58()],r,void 0,e),s=await this._rpcRequest("getSignaturesForAddress",i),n=(0,p.Ue)(s,ne);if("error"in n)throw new pt(n.error,"failed to get signatures for address");return n.result}async getAddressLookupTable(t,e){const{context:r,value:i}=await this.getAccountInfoAndContext(t,e);let s=null;return null!==i&&(s=new mt({key:t,state:mt.deserialize(i.data)})),{context:r,value:s}}async getNonceAndContext(t,e){const{context:r,value:i}=await this.getAccountInfoAndContext(t,e);let s=null;return null!==i&&(s=et.fromAccountData(i.data)),{context:r,value:s}}async getNonce(t,e){return await this.getNonceAndContext(t,e).then((t=>t.value)).catch((e=>{throw new Error("failed to get nonce for account "+t.toBase58()+": "+e)}))}async requestAirdrop(t,e){const r=await this._rpcRequest("requestAirdrop",[t.toBase58(),e]),i=(0,p.Ue)(r,Ze);if("error"in i)throw new pt(i.error,`airdrop to ${t.toBase58()} failed`);return i.result}async _blockhashWithExpiryBlockHeight(t){if(!t){for(;this._pollingBlockhash;)await F(100);const t=Date.now()-this._blockhashInfo.lastFetch>=3e4;if(null!==this._blockhashInfo.latestBlockhash&&!t)return this._blockhashInfo.latestBlockhash}return await this._pollNewBlockhash()}async _pollNewBlockhash(){this._pollingBlockhash=!0;try{const t=Date.now(),e=this._blockhashInfo.latestBlockhash,r=e?e.blockhash:null;for(let i=0;i<50;i++){const t=await this.getLatestBlockhash("finalized");if(r!==t.blockhash)return this._blockhashInfo={latestBlockhash:t,lastFetch:Date.now(),transactionSignatures:[],simulatedSignatures:[]},t;await F(200)}throw new Error(`Unable to obtain a new blockhash after ${Date.now()-t}ms`)}finally{this._pollingBlockhash=!1}}async getStakeMinimumDelegation(t){const{commitment:e,config:r}=It(t),i=this._buildArgs([],e,"base64",r),s=await this._rpcRequest("getStakeMinimumDelegation",i),n=(0,p.Ue)(s,vt((0,p.Rx)()));if("error"in n)throw new pt(n.error,"failed to get stake minimum delegation");return n.result}async simulateTransaction(t,e,r){let i;if(t instanceof j){let e=t;i=new j,i.feePayer=e.feePayer,i.instructions=t.instructions,i.nonceInfo=e.nonceInfo,i.signatures=e.signatures}else i=j.populate(t),i._message=i._json=void 0;if(i.nonceInfo&&e)i.sign(...e);else{let t=this._disableBlockhashCaching;for(;;){const r=await this._blockhashWithExpiryBlockHeight(t);if(i.lastValidBlockHeight=r.lastValidBlockHeight,i.recentBlockhash=r.blockhash,!e)break;if(i.sign(...e),!i.signature)throw new Error("!signature");const s=i.signature.toString("base64");if(!this._blockhashInfo.simulatedSignatures.includes(s)&&!this._blockhashInfo.transactionSignatures.includes(s)){this._blockhashInfo.simulatedSignatures.push(s);break}t=!0}}const s=i._compile(),n=s.serialize(),o=i._serialize(n).toString("base64"),a={encoding:"base64",commitment:this.commitment};if(r){const t=(Array.isArray(r)?r:s.nonProgramIds()).map((t=>t.toBase58()));a.accounts={encoding:"base64",addresses:t}}e&&(a.sigVerify=!0);const c=[o,a],u=await this._rpcRequest("simulateTransaction",c),l=(0,p.Ue)(u,Kt);if("error"in l){let t;if("data"in l.error&&(t=l.error.data.logs,t&&Array.isArray(t))){const e="\n    ",r=e+t.join(e);console.error(l.error.message,r)}throw new gt("failed to simulate transaction: "+l.error.message,t)}return l.result}async sendTransaction(t,e,r){if(t.nonceInfo)t.sign(...e);else{let r=this._disableBlockhashCaching;for(;;){const i=await this._blockhashWithExpiryBlockHeight(r);if(t.lastValidBlockHeight=i.lastValidBlockHeight,t.recentBlockhash=i.blockhash,t.sign(...e),!t.signature)throw new Error("!signature");const s=t.signature.toString("base64");if(!this._blockhashInfo.transactionSignatures.includes(s)){this._blockhashInfo.transactionSignatures.push(s);break}r=!0}}const i=t.serialize();return await this.sendRawTransaction(i,r)}async sendRawTransaction(t,e){const r=v(t).toString("base64");return await this.sendEncodedTransaction(r,e)}async sendEncodedTransaction(t,e){const r={encoding:"base64"},i=e&&e.skipPreflight,s=e&&e.preflightCommitment||this.commitment;e&&null!=e.maxRetries&&(r.maxRetries=e.maxRetries),e&&null!=e.minContextSlot&&(r.minContextSlot=e.minContextSlot),i&&(r.skipPreflight=i),s&&(r.preflightCommitment=s);const n=[t,r],o=await this._rpcRequest("sendTransaction",n),a=(0,p.Ue)(o,je);if("error"in a){let t;throw"data"in a.error&&(t=a.error.data.logs),new gt("failed to send transaction: "+a.error.message,t)}return a.result}_wsOnOpen(){this._rpcWebSocketConnected=!0,this._rpcWebSocketHeartbeat=setInterval((()=>{this._rpcWebSocket.notify("ping").catch((()=>{}))}),5e3),this._updateSubscriptions()}_wsOnError(t){this._rpcWebSocketConnected=!1,console.error("ws error:",t.message)}_wsOnClose(t){this._rpcWebSocketConnected=!1,this._rpcWebSocketGeneration++,this._rpcWebSocketIdleTimeout&&(clearTimeout(this._rpcWebSocketIdleTimeout),this._rpcWebSocketIdleTimeout=null),this._rpcWebSocketHeartbeat&&(clearInterval(this._rpcWebSocketHeartbeat),this._rpcWebSocketHeartbeat=null),1e3!==t?(this._subscriptionCallbacksByServerSubscriptionId={},Object.entries(this._subscriptionsByHash).forEach((([t,e])=>{this._subscriptionsByHash[t]={...e,state:"pending"}}))):this._updateSubscriptions()}async _updateSubscriptions(){if(0===Object.keys(this._subscriptionsByHash).length)return void(this._rpcWebSocketConnected&&(this._rpcWebSocketConnected=!1,this._rpcWebSocketIdleTimeout=setTimeout((()=>{this._rpcWebSocketIdleTimeout=null;try{this._rpcWebSocket.close()}catch(t){t instanceof Error&&console.log(`Error when closing socket connection: ${t.message}`)}}),500)));if(null!==this._rpcWebSocketIdleTimeout&&(clearTimeout(this._rpcWebSocketIdleTimeout),this._rpcWebSocketIdleTimeout=null,this._rpcWebSocketConnected=!0),!this._rpcWebSocketConnected)return void this._rpcWebSocket.connect();const t=this._rpcWebSocketGeneration,e=()=>t===this._rpcWebSocketGeneration;await Promise.all(Object.keys(this._subscriptionsByHash).map((async t=>{const r=this._subscriptionsByHash[t];if(void 0!==r)switch(r.state){case"pending":case"unsubscribed":if(0===r.callbacks.size)return delete this._subscriptionsByHash[t],"unsubscribed"===r.state&&delete this._subscriptionCallbacksByServerSubscriptionId[r.serverSubscriptionId],void(await this._updateSubscriptions());await(async()=>{const{args:i,method:s}=r;try{this._subscriptionsByHash[t]={...r,state:"subscribing"};const e=await this._rpcWebSocket.call(s,i);this._subscriptionsByHash[t]={...r,serverSubscriptionId:e,state:"subscribed"},this._subscriptionCallbacksByServerSubscriptionId[e]=r.callbacks,await this._updateSubscriptions()}catch(n){if(n instanceof Error&&console.error(`${s} error for argument`,i,n.message),!e())return;this._subscriptionsByHash[t]={...r,state:"pending"},await this._updateSubscriptions()}})();break;case"subscribed":0===r.callbacks.size&&await(async()=>{const{serverSubscriptionId:i,unsubscribeMethod:s}=r;if(this._subscriptionsAutoDisposedByRpc.has(i))this._subscriptionsAutoDisposedByRpc.delete(i);else{this._subscriptionsByHash[t]={...r,state:"unsubscribing"};try{await this._rpcWebSocket.call(s,[i])}catch(n){if(n instanceof Error&&console.error(`${s} error:`,n.message),!e())return;return this._subscriptionsByHash[t]={...r,state:"subscribed"},void(await this._updateSubscriptions())}}this._subscriptionsByHash[t]={...r,state:"unsubscribed"},await this._updateSubscriptions()})()}})))}_handleServerNotification(t,e){const r=this._subscriptionCallbacksByServerSubscriptionId[t];void 0!==r&&r.forEach((t=>{try{t(...e)}catch(r){console.error(r)}}))}_wsOnAccountNotification(t){const{result:e,subscription:r}=(0,p.Ue)(t,oe);this._handleServerNotification(r,[e.value,e.context])}_makeSubscription(t,e){const r=this._nextClientSubscriptionId++,i=lt([t.method,e],!0),s=this._subscriptionsByHash[i];return void 0===s?this._subscriptionsByHash[i]={...t,args:e,callbacks:new Set([t.callback]),state:"pending"}:s.callbacks.add(t.callback),this._subscriptionDisposeFunctionsByClientSubscriptionId[r]=async()=>{delete this._subscriptionDisposeFunctionsByClientSubscriptionId[r];const e=this._subscriptionsByHash[i];L(void 0!==e,`Could not find a \`Subscription\` when tearing down client subscription #${r}`),e.callbacks.delete(t.callback),await this._updateSubscriptions()},this._updateSubscriptions(),r}onAccountChange(t,e,r){const i=this._buildArgs([t.toBase58()],r||this._commitment||"finalized","base64");return this._makeSubscription({callback:e,method:"accountSubscribe",unsubscribeMethod:"accountUnsubscribe"},i)}async removeAccountChangeListener(t){await this._unsubscribeClientSubscription(t,"account change")}_wsOnProgramAccountNotification(t){const{result:e,subscription:r}=(0,p.Ue)(t,ce);this._handleServerNotification(r,[{accountId:e.value.pubkey,accountInfo:e.value.account},e.context])}onProgramAccountChange(t,e,r,i){const s=this._buildArgs([t.toBase58()],r||this._commitment||"finalized","base64",i?{filters:i}:void 0);return this._makeSubscription({callback:e,method:"programSubscribe",unsubscribeMethod:"programUnsubscribe"},s)}async removeProgramAccountChangeListener(t){await this._unsubscribeClientSubscription(t,"program account change")}onLogs(t,e,r){const i=this._buildArgs(["object"===typeof t?{mentions:[t.toString()]}:t],r||this._commitment||"finalized");return this._makeSubscription({callback:e,method:"logsSubscribe",unsubscribeMethod:"logsUnsubscribe"},i)}async removeOnLogsListener(t){await this._unsubscribeClientSubscription(t,"logs")}_wsOnLogsNotification(t){const{result:e,subscription:r}=(0,p.Ue)(t,He);this._handleServerNotification(r,[e.value,e.context])}_wsOnSlotNotification(t){const{result:e,subscription:r}=(0,p.Ue)(t,le);this._handleServerNotification(r,[e])}onSlotChange(t){return this._makeSubscription({callback:t,method:"slotSubscribe",unsubscribeMethod:"slotUnsubscribe"},[])}async removeSlotChangeListener(t){await this._unsubscribeClientSubscription(t,"slot change")}_wsOnSlotUpdatesNotification(t){const{result:e,subscription:r}=(0,p.Ue)(t,he);this._handleServerNotification(r,[e])}onSlotUpdate(t){return this._makeSubscription({callback:t,method:"slotsUpdatesSubscribe",unsubscribeMethod:"slotsUpdatesUnsubscribe"},[])}async removeSlotUpdateListener(t){await this._unsubscribeClientSubscription(t,"slot update")}async _unsubscribeClientSubscription(t,e){const r=this._subscriptionDisposeFunctionsByClientSubscriptionId[t];r?await r():console.warn(`Ignored unsubscribe request because an active subscription with id \`${t}\` for '${e}' events could not be found.`)}_buildArgs(t,e,r,i){const s=e||this._commitment;if(s||r||i){let e={};r&&(e.encoding=r),s&&(e.commitment=s),i&&(e=Object.assign(e,i)),t.push(e)}return t}_buildArgsAtLeastConfirmed(t,e,r,i){const s=e||this._commitment;if(s&&!["confirmed","finalized"].includes(s))throw new Error("Using Connection with default commitment: `"+this._commitment+"`, but method requires at least `confirmed`");return this._buildArgs(t,e,r,i)}_wsOnSignatureNotification(t){const{result:e,subscription:r}=(0,p.Ue)(t,ge);"receivedSignature"!==e.value&&this._subscriptionsAutoDisposedByRpc.add(r),this._handleServerNotification(r,"receivedSignature"===e.value?[{type:"received"},e.context]:[{type:"status",result:e.value},e.context])}onSignature(t,e,r){const i=this._buildArgs([t],r||this._commitment||"finalized"),s=this._makeSubscription({callback:(t,r)=>{if("status"===t.type){e(t.result,r);try{this.removeSignatureListener(s)}catch(i){}}},method:"signatureSubscribe",unsubscribeMethod:"signatureUnsubscribe"},i);return s}onSignatureWithOptions(t,e,r){const{commitment:i,...s}={...r,commitment:r&&r.commitment||this._commitment||"finalized"},n=this._buildArgs([t],i,void 0,s),o=this._makeSubscription({callback:(t,r)=>{e(t,r);try{this.removeSignatureListener(o)}catch(i){}},method:"signatureSubscribe",unsubscribeMethod:"signatureUnsubscribe"},n);return o}async removeSignatureListener(t){await this._unsubscribeClientSubscription(t,"signature result")}_wsOnRootNotification(t){const{result:e,subscription:r}=(0,p.Ue)(t,pe);this._handleServerNotification(r,[e])}onRootChange(t){return this._makeSubscription({callback:t,method:"rootSubscribe",unsubscribeMethod:"rootUnsubscribe"},[])}async removeRootChangeListener(t){await this._unsubscribeClientSubscription(t,"root change")}}class De{constructor(t){this._keypair=void 0,this._keypair=null!==t&&void 0!==t?t:_()}static generate(){return new De(_())}static fromSecretKey(t,e){if(64!==t.byteLength)throw new Error("bad secret key size");const r=t.slice(32,64);if(!e||!e.skipValidation){const e=t.slice(0,32),i=I(e);for(let t=0;t<32;t++)if(r[t]!==i[t])throw new Error("provided secretKey is invalid")}return new De({publicKey:r,secretKey:t})}static fromSeed(t){const e=I(t),r=new Uint8Array(64);return r.set(t),r.set(e,32),new De({publicKey:e,secretKey:r})}get publicKey(){return new E(this._keypair.publicKey)}get secretKey(){return this._keypair.secretKey}}const Fe=Object.freeze({CreateLookupTable:{index:0,layout:h.n_([h.Jq("instruction"),rt("recentSlot"),h.u8("bumpSeed")])},FreezeLookupTable:{index:1,layout:h.n_([h.Jq("instruction")])},ExtendLookupTable:{index:2,layout:h.n_([h.Jq("instruction"),rt(),h.A9(z(),h.cv(h.Jq(),-8),"addresses")])},DeactivateLookupTable:{index:3,layout:h.n_([h.Jq("instruction")])},CloseLookupTable:{index:4,layout:h.n_([h.Jq("instruction")])}});class Ve{constructor(){}static createLookupTable(t){const[e,r]=E.findProgramAddressSync([t.authority.toBuffer(),(0,g.k$)(BigInt(t.recentSlot),8)],this.programId),i=V(Fe.CreateLookupTable,{recentSlot:BigInt(t.recentSlot),bumpSeed:r}),s=[{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:t.authority,isSigner:!0,isWritable:!1},{pubkey:t.payer,isSigner:!0,isWritable:!0},{pubkey:nt.programId,isSigner:!1,isWritable:!1}];return[new Z({programId:this.programId,keys:s,data:i}),e]}static freezeLookupTable(t){const e=V(Fe.FreezeLookupTable),r=[{pubkey:t.lookupTable,isSigner:!1,isWritable:!0},{pubkey:t.authority,isSigner:!0,isWritable:!1}];return new Z({programId:this.programId,keys:r,data:e})}static extendLookupTable(t){const e=V(Fe.ExtendLookupTable,{addresses:t.addresses.map((t=>t.toBytes()))}),r=[{pubkey:t.lookupTable,isSigner:!1,isWritable:!0},{pubkey:t.authority,isSigner:!0,isWritable:!1}];return t.payer&&r.push({pubkey:t.payer,isSigner:!0,isWritable:!0},{pubkey:nt.programId,isSigner:!1,isWritable:!1}),new Z({programId:this.programId,keys:r,data:e})}static deactivateLookupTable(t){const e=V(Fe.DeactivateLookupTable),r=[{pubkey:t.lookupTable,isSigner:!1,isWritable:!0},{pubkey:t.authority,isSigner:!0,isWritable:!1}];return new Z({programId:this.programId,keys:r,data:e})}static closeLookupTable(t){const e=V(Fe.CloseLookupTable),r=[{pubkey:t.lookupTable,isSigner:!1,isWritable:!0},{pubkey:t.authority,isSigner:!0,isWritable:!1},{pubkey:t.recipient,isSigner:!1,isWritable:!0}];return new Z({programId:this.programId,keys:r,data:e})}}Ve.programId=new E("AddressLookupTab1e1111111111111111111111111");const Qe=Object.freeze({RequestUnits:{index:0,layout:h.n_([h.u8("instruction"),h.Jq("units"),h.Jq("additionalFee")])},RequestHeapFrame:{index:1,layout:h.n_([h.u8("instruction"),h.Jq("bytes")])},SetComputeUnitLimit:{index:2,layout:h.n_([h.u8("instruction"),h.Jq("units")])},SetComputeUnitPrice:{index:3,layout:h.n_([h.u8("instruction"),rt("microLamports")])}});class Ye{constructor(){}static requestUnits(t){const e=V(Qe.RequestUnits,t);return new Z({keys:[],programId:this.programId,data:e})}static requestHeapFrame(t){const e=V(Qe.RequestHeapFrame,t);return new Z({keys:[],programId:this.programId,data:e})}static setComputeUnitLimit(t){const e=V(Qe.SetComputeUnitLimit,t);return new Z({keys:[],programId:this.programId,data:e})}static setComputeUnitPrice(t){const e=V(Qe.SetComputeUnitPrice,{microLamports:BigInt(t.microLamports)});return new Z({keys:[],programId:this.programId,data:e})}}Ye.programId=new E("ComputeBudget111111111111111111111111111111");const tr=h.n_([h.u8("numSignatures"),h.u8("padding"),h.KB("signatureOffset"),h.KB("signatureInstructionIndex"),h.KB("publicKeyOffset"),h.KB("publicKeyInstructionIndex"),h.KB("messageDataOffset"),h.KB("messageDataSize"),h.KB("messageInstructionIndex")]);class er{constructor(){}static createInstructionWithPublicKey(t){const{publicKey:e,message:r,signature:s,instructionIndex:n}=t;L(32===e.length,`Public Key must be 32 bytes but received ${e.length} bytes`),L(64===s.length,`Signature must be 64 bytes but received ${s.length} bytes`);const o=tr.span,a=o+e.length,c=a+s.length,u=i.Buffer.alloc(c+r.length),l=null==n?65535:n;return tr.encode({numSignatures:1,padding:0,signatureOffset:a,signatureInstructionIndex:l,publicKeyOffset:o,publicKeyInstructionIndex:l,messageDataOffset:c,messageDataSize:r.length,messageInstructionIndex:l},u),u.fill(e,o),u.fill(s,a),u.fill(r,c),new Z({keys:[],programId:er.programId,data:u})}static createInstructionWithPrivateKey(t){const{privateKey:e,message:r,instructionIndex:i}=t;L(64===e.length,`Private key must be 64 bytes but received ${e.length} bytes`);try{const t=De.fromSecretKey(e),s=t.publicKey.toBytes(),n=x(r,t.secretKey);return this.createInstructionWithPublicKey({publicKey:s,message:r,signature:n,instructionIndex:i})}catch(s){throw new Error(`Error creating instruction; ${s}`)}}}er.programId=new E("Ed25519SigVerify111111111111111111111111111"),S.P6.hmacSha256Sync=(t,...e)=>{const r=w.b.create(l.J,t);return e.forEach((t=>r.update(t))),r.digest()};S.P6.isValidPrivateKey;const rr=S.$3,ir=h.n_([h.u8("numSignatures"),h.KB("signatureOffset"),h.u8("signatureInstructionIndex"),h.KB("ethAddressOffset"),h.u8("ethAddressInstructionIndex"),h.KB("messageDataOffset"),h.KB("messageDataSize"),h.u8("messageInstructionIndex"),h.Ik(20,"ethAddress"),h.Ik(64,"signature"),h.u8("recoveryId")]);class sr{constructor(){}static publicKeyToEthAddress(t){L(64===t.length,`Public key must be 64 bytes but received ${t.length} bytes`);try{return i.Buffer.from(k().keccak_256.update(v(t)).digest()).slice(-20)}catch(e){throw new Error(`Error constructing Ethereum address: ${e}`)}}static createInstructionWithPublicKey(t){const{publicKey:e,message:r,signature:i,recoveryId:s,instructionIndex:n}=t;return sr.createInstructionWithEthAddress({ethAddress:sr.publicKeyToEthAddress(e),message:r,signature:i,recoveryId:s,instructionIndex:n})}static createInstructionWithEthAddress(t){const{ethAddress:e,message:r,signature:s,recoveryId:n,instructionIndex:o=0}=t;let a;a="string"===typeof e?e.startsWith("0x")?i.Buffer.from(e.substr(2),"hex"):i.Buffer.from(e,"hex"):e,L(20===a.length,`Address must be 20 bytes but received ${a.length} bytes`);const c=12+a.length,u=c+s.length+1,l=i.Buffer.alloc(ir.span+r.length);return ir.encode({numSignatures:1,signatureOffset:c,signatureInstructionIndex:o,ethAddressOffset:12,ethAddressInstructionIndex:o,messageDataOffset:u,messageDataSize:r.length,messageInstructionIndex:o,signature:v(s),ethAddress:v(a),recoveryId:n},l),l.fill(v(r),ir.span),new Z({keys:[],programId:sr.programId,data:l})}static createInstructionWithPrivateKey(t){const{privateKey:e,message:r,instructionIndex:s}=t;L(32===e.length,`Private key must be 32 bytes but received ${e.length} bytes`);try{const t=v(e),a=rr(t,!1).slice(1),c=i.Buffer.from(k().keccak_256.update(v(r)).digest()),[u,l]=(n=c,o=t,S.kS(n,o,{der:!1,recovered:!0}));return this.createInstructionWithPublicKey({publicKey:a,message:r,signature:u,recoveryId:l,instructionIndex:s})}catch(a){throw new Error(`Error creating instruction; ${a}`)}var n,o}}sr.programId=new E("KeccakSecp256k11111111111111111111111111111");const nr=new E("StakeConfig11111111111111111111111111111111");class or{constructor(t,e,r){this.unixTimestamp=void 0,this.epoch=void 0,this.custodian=void 0,this.unixTimestamp=t,this.epoch=e,this.custodian=r}}or.default=new or(0,0,E.default);const ar=Object.freeze({Initialize:{index:0,layout:h.n_([h.Jq("instruction"),((t="authorized")=>h.n_([z("staker"),z("withdrawer")],t))(),((t="lockup")=>h.n_([h.gM("unixTimestamp"),h.gM("epoch"),z("custodian")],t))()])},Authorize:{index:1,layout:h.n_([h.Jq("instruction"),z("newAuthorized"),h.Jq("stakeAuthorizationType")])},Delegate:{index:2,layout:h.n_([h.Jq("instruction")])},Split:{index:3,layout:h.n_([h.Jq("instruction"),h.gM("lamports")])},Withdraw:{index:4,layout:h.n_([h.Jq("instruction"),h.gM("lamports")])},Deactivate:{index:5,layout:h.n_([h.Jq("instruction")])},Merge:{index:7,layout:h.n_([h.Jq("instruction")])},AuthorizeWithSeed:{index:8,layout:h.n_([h.Jq("instruction"),z("newAuthorized"),h.Jq("stakeAuthorizationType"),O("authoritySeed"),z("authorityOwner")])}});Object.freeze({Staker:{index:0},Withdrawer:{index:1}});class cr{constructor(){}static initialize(t){const{stakePubkey:e,authorized:r,lockup:i}=t,s=i||or.default,n=V(ar.Initialize,{authorized:{staker:v(r.staker.toBuffer()),withdrawer:v(r.withdrawer.toBuffer())},lockup:{unixTimestamp:s.unixTimestamp,epoch:s.epoch,custodian:v(s.custodian.toBuffer())}}),o={keys:[{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:X,isSigner:!1,isWritable:!1}],programId:this.programId,data:n};return new Z(o)}static createAccountWithSeed(t){const e=new j;e.add(nt.createAccountWithSeed({fromPubkey:t.fromPubkey,newAccountPubkey:t.stakePubkey,basePubkey:t.basePubkey,seed:t.seed,lamports:t.lamports,space:this.space,programId:this.programId}));const{stakePubkey:r,authorized:i,lockup:s}=t;return e.add(this.initialize({stakePubkey:r,authorized:i,lockup:s}))}static createAccount(t){const e=new j;e.add(nt.createAccount({fromPubkey:t.fromPubkey,newAccountPubkey:t.stakePubkey,lamports:t.lamports,space:this.space,programId:this.programId}));const{stakePubkey:r,authorized:i,lockup:s}=t;return e.add(this.initialize({stakePubkey:r,authorized:i,lockup:s}))}static delegate(t){const{stakePubkey:e,authorizedPubkey:r,votePubkey:i}=t,s=V(ar.Delegate);return(new j).add({keys:[{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:i,isSigner:!1,isWritable:!1},{pubkey:M,isSigner:!1,isWritable:!1},{pubkey:$,isSigner:!1,isWritable:!1},{pubkey:nr,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:s})}static authorize(t){const{stakePubkey:e,authorizedPubkey:r,newAuthorizedPubkey:i,stakeAuthorizationType:s,custodianPubkey:n}=t,o=V(ar.Authorize,{newAuthorized:v(i.toBuffer()),stakeAuthorizationType:s.index}),a=[{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:M,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}];return n&&a.push({pubkey:n,isSigner:!1,isWritable:!1}),(new j).add({keys:a,programId:this.programId,data:o})}static authorizeWithSeed(t){const{stakePubkey:e,authorityBase:r,authoritySeed:i,authorityOwner:s,newAuthorizedPubkey:n,stakeAuthorizationType:o,custodianPubkey:a}=t,c=V(ar.AuthorizeWithSeed,{newAuthorized:v(n.toBuffer()),stakeAuthorizationType:o.index,authoritySeed:i,authorityOwner:v(s.toBuffer())}),u=[{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1},{pubkey:M,isSigner:!1,isWritable:!1}];return a&&u.push({pubkey:a,isSigner:!1,isWritable:!1}),(new j).add({keys:u,programId:this.programId,data:c})}static splitInstruction(t){const{stakePubkey:e,authorizedPubkey:r,splitStakePubkey:i,lamports:s}=t,n=V(ar.Split,{lamports:s});return new Z({keys:[{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:i,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:n})}static split(t){const e=new j;return e.add(nt.createAccount({fromPubkey:t.authorizedPubkey,newAccountPubkey:t.splitStakePubkey,lamports:0,space:this.space,programId:this.programId})),e.add(this.splitInstruction(t))}static splitWithSeed(t){const{stakePubkey:e,authorizedPubkey:r,splitStakePubkey:i,basePubkey:s,seed:n,lamports:o}=t,a=new j;return a.add(nt.allocate({accountPubkey:i,basePubkey:s,seed:n,space:this.space,programId:this.programId})),a.add(this.splitInstruction({stakePubkey:e,authorizedPubkey:r,splitStakePubkey:i,lamports:o}))}static merge(t){const{stakePubkey:e,sourceStakePubKey:r,authorizedPubkey:i}=t,s=V(ar.Merge);return(new j).add({keys:[{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!1,isWritable:!0},{pubkey:M,isSigner:!1,isWritable:!1},{pubkey:$,isSigner:!1,isWritable:!1},{pubkey:i,isSigner:!0,isWritable:!1}],programId:this.programId,data:s})}static withdraw(t){const{stakePubkey:e,authorizedPubkey:r,toPubkey:i,lamports:s,custodianPubkey:n}=t,o=V(ar.Withdraw,{lamports:s}),a=[{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:i,isSigner:!1,isWritable:!0},{pubkey:M,isSigner:!1,isWritable:!1},{pubkey:$,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}];return n&&a.push({pubkey:n,isSigner:!1,isWritable:!1}),(new j).add({keys:a,programId:this.programId,data:o})}static deactivate(t){const{stakePubkey:e,authorizedPubkey:r}=t,i=V(ar.Deactivate);return(new j).add({keys:[{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:M,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:i})}}cr.programId=new E("Stake11111111111111111111111111111111111111"),cr.space=200;const ur=Object.freeze({InitializeAccount:{index:0,layout:h.n_([h.Jq("instruction"),((t="voteInit")=>h.n_([z("nodePubkey"),z("authorizedVoter"),z("authorizedWithdrawer"),h.u8("commission")],t))()])},Authorize:{index:1,layout:h.n_([h.Jq("instruction"),z("newAuthorized"),h.Jq("voteAuthorizationType")])},Withdraw:{index:3,layout:h.n_([h.Jq("instruction"),h.gM("lamports")])}});Object.freeze({Voter:{index:0},Withdrawer:{index:1}});class lr{constructor(){}static initializeAccount(t){const{votePubkey:e,nodePubkey:r,voteInit:i}=t,s=V(ur.InitializeAccount,{voteInit:{nodePubkey:v(i.nodePubkey.toBuffer()),authorizedVoter:v(i.authorizedVoter.toBuffer()),authorizedWithdrawer:v(i.authorizedWithdrawer.toBuffer()),commission:i.commission}}),n={keys:[{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:X,isSigner:!1,isWritable:!1},{pubkey:M,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:s};return new Z(n)}static createAccount(t){const e=new j;return e.add(nt.createAccount({fromPubkey:t.fromPubkey,newAccountPubkey:t.votePubkey,lamports:t.lamports,space:this.space,programId:this.programId})),e.add(this.initializeAccount({votePubkey:t.votePubkey,nodePubkey:t.voteInit.nodePubkey,voteInit:t.voteInit}))}static authorize(t){const{votePubkey:e,authorizedPubkey:r,newAuthorizedPubkey:i,voteAuthorizationType:s}=t,n=V(ur.Authorize,{newAuthorized:v(i.toBuffer()),voteAuthorizationType:s.index}),o=[{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:M,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}];return(new j).add({keys:o,programId:this.programId,data:n})}static withdraw(t){const{votePubkey:e,authorizedWithdrawerPubkey:r,lamports:i,toPubkey:s}=t,n=V(ur.Withdraw,{lamports:i}),o=[{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:s,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}];return(new j).add({keys:o,programId:this.programId,data:n})}static safeWithdraw(t,e,r){if(t.lamports>e-r)throw new Error("Withdraw will leave vote account with insuffcient funds.");return lr.withdraw(t)}}lr.programId=new E("Vote111111111111111111111111111111111111111"),lr.space=3731;new E("Va1idator1nfo111111111111111111111111111111"),(0,p.dt)({name:(0,p.Z_)(),website:(0,p.jt)((0,p.Z_)()),details:(0,p.jt)((0,p.Z_)()),keybaseUsername:(0,p.jt)((0,p.Z_)())});new E("Vote111111111111111111111111111111111111111"),h.n_([z("nodePubkey"),z("authorizedWithdrawer"),h.u8("commission"),h._O(),h.A9(h.n_([h._O("slot"),h.Jq("confirmationCount")]),h.cv(h.Jq(),-8),"votes"),h.u8("rootSlotValid"),h._O("rootSlot"),h._O(),h.A9(h.n_([h._O("epoch"),z("authorizedVoter")]),h.cv(h.Jq(),-8),"authorizedVoters"),h.n_([h.A9(h.n_([z("authorizedPubkey"),h._O("epochOfLastAuthorizedSwitch"),h._O("targetEpoch")]),32,"buf"),h._O("idx"),h.u8("isEmpty")],"priorVoters"),h._O(),h.A9(h.n_([h._O("epoch"),h._O("credits"),h._O("prevCredits")]),h.cv(h.Jq(),-8),"epochCredits"),h.n_([h._O("slot"),h._O("timestamp")],"lastTimestamp")])}}]);